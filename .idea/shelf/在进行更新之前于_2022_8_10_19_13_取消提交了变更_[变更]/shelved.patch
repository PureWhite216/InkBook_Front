Index: src/views/personal/index.vue
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><template>\r\n  <div class=\"main-container\" style=\"font-family: 等线\">\r\n    <div class=\"content-wrapper margin-top\">\r\n      <el-card\r\n        :body-style=\"{padding: 0}\"\r\n        shadow=\"hover\"\r\n      >\r\n        <div class=\"flex justify-between padding-sm solid-bottom\">\r\n          <el-link :underline=\"false\">基本信息</el-link>\r\n        </div>\r\n        <el-form\r\n          v-model=\"baseInfoModel\"\r\n          label-width=\"80px\"\r\n          class=\"form-wrapper\"\r\n          size=\"small\"\r\n          label-position=\"right\"\r\n        >\r\n          <el-col :span=\"24\">\r\n            <el-form-item label=\"头像\">\r\n              <el-avatar :size=\"100\" :src=\"personalInformation.avatar\" />\r\n            </el-form-item>\r\n          </el-col>\r\n          <el-col :span=\"24\">\r\n            <el-form-item>\r\n              <el-upload\r\n                ref=\"upload\"\r\n                class=\"avatar-uploader\"\r\n                :limit=\"5\"\r\n                action=\"\"\r\n                :http-request=\"changeFile\"\r\n                :show-file-list=\"false\"\r\n              >\r\n                <el-button icon=\"el-icon-upload\" type=\"primary\">修改头像</el-button>\r\n              </el-upload>\r\n            </el-form-item>\r\n          </el-col>\r\n\r\n          <el-col :span=\"24\">\r\n            <el-form-item label=\"名称\">\r\n              <el-input\r\n                v-model=\"personalInformation.username\"\r\n                :disabled=\"true\"\r\n              />\r\n            </el-form-item>\r\n          </el-col>\r\n\r\n          <el-col :span=\"24\">\r\n            <el-form-item label=\"真实姓名\">\r\n              <el-input\r\n                v-model=\"personalInformation.real_name\"\r\n                :disabled=\"true\"\r\n              />\r\n            </el-form-item>\r\n          </el-col>\r\n          <el-col :span=\"24\">\r\n            <el-form-item label=\"ID\">\r\n              <el-input\r\n                v-model=\"personalInformation.user_id\"\r\n                :disabled=\"true\"\r\n              />\r\n            </el-form-item>\r\n          </el-col>\r\n          <el-col :span=\"24\">\r\n            <el-form-item label=\"邮箱\">\r\n              <el-input\r\n                v-model=\"personalInformation.email\"\r\n                :disabled=\"true\"\r\n              />\r\n            </el-form-item>\r\n          </el-col>\r\n          <el-col :span=\"24\">\r\n            <el-form-item label=\"密码\">\r\n              <el-input\r\n                v-model=\"baseInfoModel.password\"\r\n                :disabled=\"true\"\r\n              />\r\n              <el-button\r\n                size=\"mini\"\r\n                type=\"Placeholder\"\r\n                :underline=\"false\"\r\n                @click=\"dialogVisible_changePassword = true\"\r\n              >修改</el-button>\r\n              <el-dialog title=\"修改密码\" :visible.sync=\"dialogVisible_changePassword\" width=\"40%\" center>\r\n                <el-form :model=\"form_changePassword\">\r\n                  <el-form-item label=\"原密码\" :label-width=\"formLabelWidth\">\r\n                    <el-input v-model=\"form_changePassword.old_password\" autocomplete=\"off\" type=\"password\" />\r\n                  </el-form-item>\r\n                  <el-form-item label=\"新密码\" :label-width=\"formLabelWidth\">\r\n                    <el-input v-model=\"form_changePassword.password1\" autocomplete=\"off\" type=\"password\" />\r\n                  </el-form-item>\r\n                  <el-form-item label=\"确认密码\" :label-width=\"formLabelWidth\">\r\n                    <el-input v-model=\"form_changePassword.password2\" autocomplete=\"off\" type=\"password\" />\r\n                  </el-form-item>\r\n                </el-form>\r\n                <div slot=\"footer\" class=\"dialog-footer\">\r\n                  <el-button @click=\"dialogVisible_changePassword = false, clearPassword()\">取 消</el-button>\r\n                  <el-button @click=\"changePassword(), dialogVisible_changePassword = false, clearPassword()\">确 定</el-button>\r\n                </div>\r\n              </el-dialog>\r\n            </el-form-item>\r\n          </el-col>\r\n          <el-button\r\n            icon=\"el-icon-upload\"\r\n            class=\"button-style\"\r\n            type=\"primary\"\r\n            @click=\"dialogVisiblechange = true\"\r\n          >\r\n            修改个人信息\r\n          </el-button>\r\n          <el-dialog title=\"修改个人信息\" :visible.sync=\"dialogVisiblechange\" width=\"40%\" center>\r\n            <el-form :model=\"form_changePassword\">\r\n              <el-form-item label=\"名称\" :label-width=\"formLabelWidth\">\r\n                <el-input v-model=\"baseInfoModel.name\" autocomplete=\"off\" />\r\n              </el-form-item>\r\n              <el-form-item label=\"真实姓名\" :label-width=\"formLabelWidth\">\r\n                <el-input v-model=\"baseInfoModel.real_name\" autocomplete=\"off\" />\r\n              </el-form-item>\r\n              <el-form-item label=\"邮箱\" :label-width=\"formLabelWidth\">\r\n                <el-input v-model=\"baseInfoModel.email\" autocomplete=\"off\" />\r\n              </el-form-item>\r\n            </el-form>\r\n            <div slot=\"footer\" class=\"dialog-footer\">\r\n              <el-button @click=\"dialogVisiblechange = false, clearPassword()\">取 消</el-button>\r\n              <el-button @click=\"changePassword(), dialogVisiblechange = false, clearPassword()\">确 定</el-button>\r\n            </div>\r\n          </el-dialog>\r\n        </el-form>\r\n      </el-card>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport qs from 'qs'\r\nimport { getters } from '@/store/modules/user.js'\r\nimport { state } from '@/store/modules/user.js'\r\nimport store from '@/layouts/store/index'\r\nexport default {\r\n  name: 'Personal',\r\n  data() {\r\n    return {\r\n      dialogVisible_changePassword: false,\r\n      dialogVisiblechange: false,\r\n      loading: false,\r\n      file: '',\r\n      Token: getters.getToken(state),\r\n      personalInformation: {\r\n        username: null,\r\n        email: null,\r\n        sex: null,\r\n        avatar: null,\r\n        user_id: null\r\n      },\r\n      form_getPersonalInformation: {\r\n        authorization: getters.getToken(state),\r\n        username: getters.getUserName(state)\r\n      },\r\n      form_deleteUser: {\r\n        token: getters.getToken(state),\r\n        username: getters.getUserName(state),\r\n        user_id: getters.getUserId(state),\r\n        password: ''\r\n      },\r\n      form_changePassword: {\r\n        mode: 1,\r\n        token: getters.getToken(state),\r\n        user_id: getters.getUserId(state),\r\n        old_password: null,\r\n        password1: null,\r\n        password2: null\r\n      },\r\n      imageUrl: '',\r\n      baseInfoModel: {\r\n        name: '',\r\n        id: '',\r\n        real_name: '',\r\n        email: '',\r\n        password: ''\r\n      },\r\n      formLabelWidth: 180\r\n    }\r\n  },\r\n  created() {\r\n    this.getPersonalInformation()\r\n  },\r\n  methods: {\r\n    changeFile (file) {\r\n      console.log('file', file)\r\n      const fd = new FormData()\r\n      fd.append('file', file.file)\r\n      fd.append('token', getters.getToken(state))\r\n      this.$axios('/user/uploadFile', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        },\r\n        data: fd\r\n      })\r\n      .then(res => {\r\n        if (res.data.success) {\r\n            this.$axios.post('/user/modifyUserInfo', qs.stringify({ token: getters.getToken(state), avatar: res.data.data.url }))\r\n          .then(res => {\r\n            if (res.data.success) {\r\n               this.$message.success(res.data.message)\r\n            } else {\r\n              this.$message.error(res.data.message)\r\n            }\r\n            this.getPersonalInformation()\r\n            getters.changeAvatar(state, this.personalInformation.avatar)\r\n            location.reload()\r\n          })\r\n        }\r\n      })\r\n    },\r\n    beforeUpload(file) {\r\n      const isJPG = file.type === 'image/jpeg'\r\n      const isLt2M = file.size / 1024 / 1024 < 10\r\n\r\n      if (!isJPG) {\r\n        this.$message.error('上传头像图片只能是 JPG 格式!')\r\n      }\r\n      if (!isLt2M) {\r\n        this.$message.error('上传头像图片大小不能超过 10MB!')\r\n      }\r\n      return isJPG && isLt2M\r\n    },\r\n    clearPassword() {\r\n      this.form_changePassword.old_password = ''\r\n      this.form_changePassword.password1 = ''\r\n      this.form_changePassword.password2 = ''\r\n    },\r\n    logOff_1() {\r\n      this.$confirm('此操作将删除此账户,请确定是否是用户本人操作?', '提示', {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n      }).then(() => {\r\n        this.logOff_2()\r\n        }).catch(() => {\r\n          this.$message({\r\n            type: 'info',\r\n            message: '已取消注销'\r\n          })\r\n        })\r\n    },\r\n    logOff_2() {\r\n      this.$confirm('此操作将彻底删除此账户,并且会删除所有个人文件，退出所有团队，是否继续?(注意，如果有身为队长的团队则无法继续注销）', '提示', {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n      }).then(() => {\r\n        this.logOff_3()\r\n        }).catch(() => {\r\n          this.$message({\r\n            type: 'info',\r\n            message: '已取消注销'\r\n          })\r\n        })\r\n    },\r\n    logOff_3() {\r\n      this.$confirm('真的要离开我们吗', '提示', {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n      }).then(() => {\r\n        this.logOff()\r\n        }).catch(() => {\r\n          this.$message({\r\n            type: 'info',\r\n            message: '已取消注销'\r\n          })\r\n        })\r\n    },\r\n    deleteUser() {\r\n      this.$axios.post('/user/delete_user', qs.stringify(this.form_deleteUser))\r\n        .then((res) => {\r\n          // console.log(5)\r\n          if (res.data.result === 3) {\r\n            this.$message.success('非常感谢您对墨书的支持，希望下次再会!')\r\n            // this.$router.push('/login')\r\n            store.logout()\r\n            store.onLogout && store.onLogout()\r\n          } else {\r\n            this.$message.error(res.data.message)\r\n          }\r\n        })\r\n    },\r\n    getPersonalInformation() {\r\n      this.loading = true\r\n      this.$axios.get('/user/selectUserByUserId', {\r\n        params: {\r\n          user_id: getters.getUserId(state)\r\n        }\r\n      })\r\n        .then((res) => {\r\n          // console.log(5)\r\n          if (res.data.success === true) {\r\n            this.personalInformation.username = res.data.data[0].username\r\n            this.personalInformation.email = res.data.data[0].email\r\n            this.personalInformation.real_name = res.data.data[0].real_name\r\n            this.personalInformation.avatar = res.data.data[0].avatar\r\n            this.personalInformation.user_id = res.data.data[0].user_id\r\n          } else {\r\n            this.$message.error(res.data.message)\r\n          }\r\n          this.loading = false\r\n        })\r\n    },\r\n    logOff() {\r\n      this.$prompt('请输入原密码', '提示', {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消'\r\n          // inputPattern: /[\\w!#$%&'*+/=?^_`{|}~-]+(?:\\.[\\w!#$%&'*+/=?^_`{|}~-]+)*@(?:[\\w](?:[\\w-]*[\\w])?\\.)+[\\w](?:[\\w-]*[\\w])?/,\r\n          // inputErrorMessage: '邮箱格式不正确'\r\n        }).then(({ value }) => {\r\n          this.form_deleteUser.password = value\r\n          this.deleteUser()\r\n        }).catch(() => {\r\n          this.$message({\r\n            type: 'info',\r\n            message: '取消注销'\r\n          })\r\n        })\r\n    },\r\n    changePassword() {\r\n      this.$axios.post('/user/changePassword', qs.stringify(this.form_changePassword))\r\n        .then((res) => {\r\n          // console.log(5)\r\n          if (res.data.success === true) {\r\n            this.$message.success(res.data.message)\r\n            store.logout()\r\n            store.onLogout && store.onLogout()\r\n            // this.$router.push('/login')\r\n          } else {\r\n            this.$message.error(res.data.message)\r\n          }\r\n        })\r\n    },\r\n    handleAvatarSuccess(res, file) {\r\n      this.imageUrl = URL.createObjectURL(file.raw)\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.button-style {\r\n  margin-left: 40px;\r\n  font-size: 14px;\r\n  //color: rgb(255, 255, 255);\r\n  height: 35px;\r\n  margin-bottom: 5px;\r\n}\r\n.avatar-uploader .el-upload {\r\n  border: 1px dashed #d9d9d9;\r\n  border-radius: 6px;\r\n  cursor: pointer;\r\n  position: relative;\r\n  overflow: hidden;\r\n}\r\n.avatar-uploader .el-upload:hover {\r\n  border-color: #409EFF;\r\n}\r\n.avatar-uploader-icon {\r\n  font-size: 28px;\r\n  color: #8c939d;\r\n  width: 178px;\r\n  height: 178px;\r\n  line-height: 178px;\r\n  text-align: center;\r\n}\r\n.avatar {\r\n  width: 178px;\r\n  height: 178px;\r\n  display: block;\r\n}\r\n.content-wrapper {\r\n  overflow-y: auto;\r\n  @media screen and (max-width: 768px) {\r\n    .form-wrapper {\r\n      margin-top: 2%;\r\n      width: 98%;\r\n      padding-left: 4%;\r\n    }\r\n  }\r\n  @media screen and (min-width: 768px) {\r\n    .form-wrapper {\r\n      margin-top: 2%;\r\n      width: 50%;\r\n      padding-left: 4%;\r\n    }\r\n  }\r\n}\r\n</style>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/views/personal/index.vue b/src/views/personal/index.vue
--- a/src/views/personal/index.vue	(revision 3a8e197a114366126ce665ea8768246ff9ca0319)
+++ b/src/views/personal/index.vue	(date 1660125035978)
@@ -198,16 +198,16 @@
       })
       .then(res => {
         if (res.data.success) {
-            this.$axios.post('/user/modifyUserInfo', qs.stringify({ token: getters.getToken(state), avatar: res.data.data.url }))
+            this.$axios.post('/user/modifyUserInfo', qs.stringify({ token: getters.getToken(state), avatar: res.data.data[0].url }))
           .then(res => {
             if (res.data.success) {
                this.$message.success(res.data.message)
+              location.reload()
             } else {
               this.$message.error(res.data.message)
             }
             this.getPersonalInformation()
             getters.changeAvatar(state, this.personalInformation.avatar)
-            location.reload()
           })
         }
       })
Index: src/views/list/table-group-project.vue
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><template>\r\n  <div class=\"main-container\">\r\n    <TableHeader :can-collapsed=\"false\">\r\n      <template slot=\"left\">\r\n        <el-button\r\n          slot=\"reference\"\r\n          class=\"back-button\"\r\n          float=\"left\"\r\n          @click=\"toProject()\"\r\n        >\r\n          <i class=\"el-icon-back\"></i>\r\n        </el-button>\r\n        <div style=\"float: right\">\r\n          <div id=\"projectName\" class=\"projecttitle\">\r\n            {{ project_name }}\r\n          </div>\r\n          <div id=\"teamName\" class=\"teamtitle\">\r\n            该项目属于团队{{ team_name }}\r\n          </div>\r\n        </div>\r\n      </template>\r\n\r\n      <template slot=\"right\">\r\n        <el-popover\r\n          v-model=\"visible\"\r\n          placement=\"top\"\r\n          width=\"350\"\r\n        >\r\n          <el-button\r\n            slot=\"reference\"\r\n            class=\"button-style\"\r\n            style=\"border-color: #57b1ff\"\r\n            @click=\"dialogWordVisible = true\"\r\n          >创建文档\r\n            <i class=\"el-icon-plus\"></i>\r\n          </el-button>\r\n        </el-popover>\r\n\r\n        <el-popover\r\n          v-model=\"visible\"\r\n          placement=\"top\"\r\n          width=\"350\"\r\n          trigger=\"click\"\r\n        >\r\n          <el-button\r\n            slot=\"reference\"\r\n            class=\"button-style\"\r\n            style=\"border-color: #a15aff\"\r\n            @click=\"dialogPageVisible = true\"\r\n          >创建原型\r\n            <i class=\"el-icon-plus\"></i>\r\n          </el-button>\r\n        </el-popover>\r\n\r\n        <el-popover\r\n          v-model=\"visible\"\r\n          placement=\"top\"\r\n          width=\"350\"\r\n        >\r\n          <el-button\r\n            slot=\"reference\"\r\n            class=\"button-style\"\r\n            style=\"border-color: #ffd45c\"\r\n            @click=\"createUML()\"\r\n          >创建uml\r\n            <i class=\"el-icon-plus\"></i>\r\n          </el-button>\r\n        </el-popover>\r\n\r\n        <el-popover\r\n          v-model=\"visible\"\r\n          placement=\"top\"\r\n          width=\"350\"\r\n        >\r\n          <el-button\r\n            slot=\"reference\"\r\n            class=\"button-style\"\r\n          ><el-dropdown trigger=\"click\" @command=\"onCommad\">\r\n            <div class=\"action-wrapper\" style=\"font-size: 18px ;font-weight: bold; font-family: 等线\">\r\n              设置\r\n              <i class=\"el-icon-setting\"></i>\r\n            </div>\r\n            <el-dropdown-menu slot=\"dropdown\">\r\n              <el-dropdown-item icon=\"el-icon-edit-outline\" command=\"personalCenter\">\r\n                <el-button type=\"text\" @click=\"form_updateProject.project_name = project_name, form_updateProject.project_info = project_info, dialogUpdateProjectVisible = true\">修改项目信息</el-button>\r\n              </el-dropdown-item>\r\n              <el-dropdown-item icon=\"el-icon-switch-button\" command=\"logout\">\r\n                <el-button type=\"text\" style=\"color: red\" @click=\"deleteProject\">删除项目</el-button>\r\n              </el-dropdown-item>\r\n            </el-dropdown-menu>\r\n          </el-dropdown>\r\n          </el-button>\r\n        </el-popover>\r\n      </template>\r\n    </TableHeader>\r\n\r\n    <el-dialog title=\"创建文档\" :visible.sync=\"dialogWordVisible\">\r\n      <el-form :model=\"form_word\">\r\n        <el-form-item label=\"文档名称\" :label-width=\"formLabelWidth\">\r\n          <el-input v-model=\"form_word.doc_name\" autocomplete=\"off\" />\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"dialogWordVisible = false; form_word.doc_name = '' \">取 消</el-button>\r\n        <el-button @click=\"dialogWordVisible = false; createWord()\">无模板创建</el-button>\r\n      </div>\r\n      <el-row>\r\n        <el-col v-for=\"(o, index) in 4\" :key=\"o\" :span=\"8\" :offset=\"index > 0 ? 2 : 0\">\r\n          <el-card :body-style=\"{ padding: '0px' }\">\r\n            <img v-if=\"index === 0\" src=\"../../assets/id_4.jpg\" class=\"image\" />\r\n            <img v-if=\"index === 1\" src=\"../../assets/id_5.jpg\" class=\"image\" />\r\n            <img v-if=\"index === 2\" src=\"../../assets/id_6.jpg\" class=\"image\" />\r\n            <img v-if=\"index === 3\" src=\"../../assets/id_7.jpg\" class=\"image\" />\r\n            <div style=\"padding: 14px;\">\r\n              <span v-if=\"index === 0\">会议纪要</span>\r\n              <span v-if=\"index === 1\">项目工作汇报</span>\r\n              <span v-if=\"index === 2\">个人学习计划</span>\r\n              <span v-if=\"index === 3\">年度工作总结</span>\r\n              <div class=\"bottom clearfix\">\r\n                <el-button type=\"text\" class=\"button\" @click=\"dialogWordVisible = false; form_word.template_id = index; createWord()\">创建</el-button>\r\n              </div>\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n      </el-row>\r\n    </el-dialog>\r\n\r\n    <el-dialog title=\"创建原型\" :visible.sync=\"dialogPageVisible\">\r\n      <el-form :model=\"form_page\">\r\n        <el-form-item label=\"原型名称\" :label-width=\"formLabelWidth\">\r\n          <el-input v-model=\"form_createAxure.axure_name\" autocomplete=\"off\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"原型简介（可不填）\" :label-width=\"formLabelWidth\">\r\n          <el-input v-model=\"form_createAxure.axure_info\" autocomplete=\"off\" />\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"dialogPageVisible = false; form_page.page_name = '' \">取 消</el-button>\r\n        <el-button @click=\"createAxure(), dialogPageVisible = false\">确 定</el-button>\r\n      </div>\r\n      <el-row>\r\n        <el-col v-for=\"(o, index) in 2\" :key=\"o\" :span=\"8\" :offset=\"index > 0 ? 2 : 0\">\r\n          <el-card :body-style=\"{ padding: '0px' }\">\r\n            <img src=\"../../assets/work_logo.png\" class=\"image\" />\r\n            <div style=\"padding: 14px;\">\r\n              <span>模板{{ index }}</span>\r\n              <div class=\"bottom clearfix\">\r\n                <time class=\"time\">{{ currentDate }}</time>\r\n                <el-button type=\"text\" class=\"button\">预览</el-button>\r\n              </div>\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n      </el-row>\r\n    </el-dialog>\r\n\r\n    <el-dialog title=\"修改项目信息\" :visible.sync=\"dialogUpdateProjectVisible\">\r\n      <el-form :model=\"form_updateProject\">\r\n        <el-form-item label=\"项目新名称\" :label-width=\"formLabelWidth\">\r\n          <el-input v-model=\"form_updateProject.project_name\" autocomplete=\"off\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"项目新简介（可不填）\" :label-width=\"formLabelWidth\">\r\n          <el-input v-model=\"form_updateProject.project_info\" autocomplete=\"off\" />\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"dialogUpdateProjectVisible = false; form_updateProject.project_name = '' \">取 消</el-button>\r\n        <el-button @click=\"updateProject(), dialogUpdateProjectVisible = false\">确 定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n\r\n    <el-dialog title=\"修改文档信息\" :visible.sync=\"dialogUpdateDocInfoVisible\">\r\n      <el-form :model=\"form_updateDocInfo\">\r\n        <el-form-item label=\"文档新名称\" :label-width=\"formLabelWidth\">\r\n          <el-input v-model=\"form_updateDocInfo.doc_name\" autocomplete=\"off\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"文档新简介（可不填）\" :label-width=\"formLabelWidth\">\r\n          <el-input v-model=\"form_updateDocInfo.doc_description\" autocomplete=\"off\" />\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"dialogUpdateDocInfoVisible = false\">取 消</el-button>\r\n        <el-button @click=\"updateDocInfo(), dialogUpdateDocInfoVisible = false\">确 定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n\r\n    <el-dialog title=\"修改原型信息\" :visible.sync=\"dialogUpdateAxureInfoVisible\">\r\n      <el-form :model=\"form_updateDocInfo\">\r\n        <el-form-item label=\"原型新名称\" :label-width=\"formLabelWidth\">\r\n          <el-input v-model=\"form_updateAxureInfo.axure_name\" autocomplete=\"off\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"原型新简介（可不填）\" :label-width=\"formLabelWidth\">\r\n          <el-input v-model=\"form_updateAxureInfo.axure_info\" autocomplete=\"off\" />\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"dialogUpdateAxureInfoVisible = false\">取 消</el-button>\r\n        <el-button @click=\"updateAxureInfo(), dialogUpdateAxureInfoVisible = false\">确 定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n    <TableBody ref=\"tableBody\" class=\"temptablebody\">\r\n      <template>\r\n        <el-tabs :tab-position=\"top\" style=\"height: 200px;\" class=\"messagecss\">\r\n          <el-tab-pane>\r\n            <span slot=\"label\" class=\"fontClass\" style=\"font-size: large; color: #2c2c2c\"><i class=\"el-icon-folder-opened\"></i>文档</span>\r\n            <el-table\r\n              ref=\"table\"\r\n              v-loading=\"tableloading\"\r\n              class=\"table-custom\"\r\n              :data=\"docList\"\r\n              :header-cell-style=\"tableConfig.headerCellStyle\"\r\n              :cell-style=\"tableConfig.cellStyle\"\r\n              :size=\"tableConfig.size\"\r\n              @row-dblclick=\"toDocEditor\"\r\n            >\r\n              <el-table-column\r\n                width=\"20\"\r\n              />\r\n              <el-table-column\r\n                align=\"center\"\r\n                label=\"名称\"\r\n                prop=\"doc_name\"\r\n                width=\"375px\"\r\n                sortable\r\n              />\r\n              <el-table-column\r\n                align=\"center\"\r\n                label=\"更新时间\"\r\n                prop=\"last_edit_time\"\r\n                width=\"250px\"\r\n                sortable\r\n              />\r\n              <el-table-column\r\n                align=\"center\"\r\n                label=\"创建者\"\r\n                prop=\"creator_name\"\r\n                width=\"200px\"\r\n              />\r\n              <el-table-column\r\n                align=\"center\"\r\n                label=\"操作\"\r\n                width=\"100\"\r\n              >\r\n                <template slot-scope=\"scope\">\r\n                  <el-dropdown trigger=\"click\" @command=\"onCommad\">\r\n                    <div class=\"action-wrapper\">\r\n                      <span class=\"nick-name el-dropdown-link\">\r\n                        <i class=\"el-icon-more\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <el-dropdown-menu slot=\"dropdown\">\r\n                      <el-dropdown-item v-if=\"!scope.row.is_favorite\" icon=\"el-icon-star-off\" command=\"personalCenter\">\r\n                        <el-button type=\"text\" @click=\"likeDoc(scope.row)\">收藏</el-button>\r\n                      </el-dropdown-item>\r\n                      <el-dropdown-item v-if=\"scope.row.is_favorite\" icon=\"el-icon-star-on\" command=\"personalCenter\">\r\n                        <el-button type=\"text\" @click=\"unlikeDoc(scope.row)\">取消收藏</el-button>\r\n                      </el-dropdown-item>\r\n                      <el-dropdown-item icon=\"el-icon-edit-outline\" command=\"personalCenter\">\r\n                        <el-button type=\"text\" @click=\"form_updateDocInfo.doc_id = scope.row.doc_id, dialogUpdateDocInfoVisible = true\">重命名</el-button>\r\n                      </el-dropdown-item>\r\n                      <el-dropdown-item icon=\"el-icon-switch-button\" command=\"logout\">\r\n                        <el-button type=\"text\" @click=\"form_deleteDoc.doc_id = scope.row.doc_id, deleteDoc()\">删除文件</el-button>\r\n                      </el-dropdown-item>\r\n                    </el-dropdown-menu>\r\n                  </el-dropdown>\r\n                </template>\r\n              </el-table-column>\r\n            </el-table>\r\n          </el-tab-pane>\r\n          <el-tab-pane>\r\n            <span slot=\"label\" class=\"fontClass\" style=\"font-size: large; color: #2c2c2c\"><i class=\"el-icon-monitor\"></i>原型</span>\r\n            <el-table\r\n              ref=\"table\"\r\n              v-loading=\"loading\"\r\n              class=\"table-custom\"\r\n              :data=\"axureList\"\r\n              :header-cell-style=\"tableConfig.headerCellStyle\"\r\n              :size=\"tableConfig.size\"\r\n              :cell-style=\"tableConfig.cellStyle\"\r\n              @row-dblclick=\"toAxureEditor\"\r\n            >\r\n              <el-table-column\r\n                width=\"20\"\r\n              />\r\n              <el-table-column\r\n                align=\"center\"\r\n                label=\"名称\"\r\n                prop=\"axure_name\"\r\n                width=\"375px\"\r\n                sortable\r\n              />\r\n              <el-table-column\r\n                align=\"center\"\r\n                label=\"更新时间\"\r\n                prop=\"last_edit\"\r\n                width=\"250px\"\r\n                sortable\r\n              />\r\n              <el-table-column\r\n                align=\"center\"\r\n                label=\"创建者\"\r\n                prop=\"create_user\"\r\n                width=\"200px\"\r\n              />\r\n              <el-table-column\r\n                align=\"center\"\r\n                label=\"操作\"\r\n                width=\"100\"\r\n              >\r\n                <template slot-scope=\"scope\">\r\n                  <el-dropdown trigger=\"click\" @command=\"onCommad\">\r\n                    <div class=\"action-wrapper\">\r\n                      <span class=\"nick-name el-dropdown-link\">\r\n                        <i class=\"el-icon-more\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <el-dropdown-menu slot=\"dropdown\">\r\n                      <el-dropdown-item v-if=\"!scope.row.isFavorite\" icon=\"el-icon-star-off\" command=\"personalCenter\">\r\n                        <el-button type=\"text\" @click=\"likeAxure(scope.row)\">收藏</el-button>\r\n                      </el-dropdown-item>\r\n                      <el-dropdown-item v-if=\"scope.row.isFavorite\" icon=\"el-icon-star-on\" command=\"personalCenter\">\r\n                        <el-button type=\"text\" @click=\"unlikeAxure(scope.row)\">取消收藏</el-button>\r\n                      </el-dropdown-item>\r\n                      <el-dropdown-item icon=\"el-icon-edit-outline\" command=\"personalCenter\">\r\n                        <el-button type=\"text\" @click=\"form_updateAxureInfo.axure_id = scope.row.axure_id, dialogUpdateAxureInfoVisible = true\">重命名</el-button>\r\n                      </el-dropdown-item>\r\n                      <el-dropdown-item icon=\"el-icon-switch-button\" command=\"logout\">\r\n                        <el-button type=\"text\" @click=\"deleteAxure(scope.row)\">删除原型</el-button>\r\n                      </el-dropdown-item>\r\n                    </el-dropdown-menu>\r\n                  </el-dropdown>\r\n                </template>\r\n              </el-table-column>\r\n            </el-table>\r\n          </el-tab-pane>\r\n        </el-tabs>\r\n      </template>\r\n    </TableBody>\r\n    <TableBody ref=\"tableBody\" class=\"rightside\">\r\n      <template>\r\n        <div class=\"rightsidefont\">\r\n          About\r\n        </div>\r\n        <el-divider />\r\n        <div>\r\n          <span>{{ project_info }}</span>\r\n          <el-divider />\r\n        </div>\r\n      </template>\r\n    </TableBody>\r\n\r\n    <!--    <TableFooter-->\r\n    <!--      :page-size=\"pageModel.pageSize\"-->\r\n    <!--      :total-size=\"pageModel.totalSize\"-->\r\n    <!--      @pageSizeChanged=\"pageSizeChanged\"-->\r\n    <!--      @currentChanged=\"currentChanged\"-->\r\n    <!--      @onRefresh=\"doRefresh\"-->\r\n    <!--    />-->\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport TableMixin, { PageModelMixin } from '@/mixins/TableMixin'\r\nimport {\r\n  GetDataMixin,\r\n  AddItemMixin,\r\n  DeleteItemsMixin,\r\n  UpdateItemMixin,\r\n  RefreshActionMixin\r\n} from '@/mixins/ActionMixin'\r\nimport SingleUpload from '@/components/common/SingleUpload.vue'\r\nimport BaseForm from '@/components/common/BaseForm.vue'\r\nimport draggable from '@/directive/draggable'\r\nimport store from '@/layouts/store'\r\nimport qs from 'qs'\r\n// import { mapActions, mapState } from 'poster/poster.vuex'\r\nimport { getters } from '@/store/modules/user.js'\r\nimport { state } from '@/store/modules/user.js'\r\nimport router from '@/router'\r\nexport default {\r\n  name: 'TableGroupMember',\r\n  // eslint-disable-next-line vue/no-unused-components\r\n  components: { SingleUpload, BaseForm },\r\n  directives: { draggable },\r\n  mixins: [\r\n    TableMixin,\r\n    PageModelMixin,\r\n    GetDataMixin,\r\n    AddItemMixin,\r\n    DeleteItemsMixin,\r\n    UpdateItemMixin,\r\n    RefreshActionMixin\r\n  ],\r\n  data() {\r\n    return {\r\n      visible_setPerm: true,\r\n      loading: false,\r\n      form_likeAxure: {\r\n        token: getters.getToken(state),\r\n        axure_id: null\r\n      },\r\n      form_updateAxureInfo: {\r\n        token: getters.getToken(state),\r\n        axure_id: null,\r\n        axure_name: null,\r\n        axure_info: null\r\n      },\r\n      form_likeDoc: {\r\n        token: getters.getToken(state),\r\n        doc_id: null,\r\n        undo: null\r\n      },\r\n      form_deleteAxure: {\r\n        token: getters.getToken(state),\r\n        axure_id: null\r\n      },\r\n      form_createAxure: {\r\n        token: getters.getToken(state),\r\n        axure_name: null,\r\n        axure_info: null,\r\n        project_id: localStorage.getItem('project_id')\r\n      },\r\n      form_getAxureList: {\r\n        token: getters.getToken(state),\r\n        project_id: localStorage.getItem('project_id')\r\n      },\r\n      form_deleteDoc: {\r\n        token: getters.getToken(state),\r\n        doc_id: null,\r\n        recycle: false\r\n      },\r\n      form_updateDocInfo: {\r\n        token: getters.getToken(state),\r\n        doc_id: null,\r\n        doc_name: null,\r\n        doc_description: null\r\n      },\r\n      form_deleteProject: {\r\n        token: getters.getToken(state),\r\n        user_id: getters.getUserId(state),\r\n        project_id: localStorage.getItem('project_id')\r\n      },\r\n      form_updateProject: {\r\n        token: getters.getToken(state),\r\n        user_id: getters.getUserId(state),\r\n        project_id: localStorage.getItem('project_id'),\r\n        project_name: '',\r\n        project_info: ''\r\n      },\r\n      form_member: {\r\n        token: getters.getToken(state),\r\n        username: getters.getUserName(state),\r\n        user_id: getters.getUserId(state),\r\n        team_id: Number(localStorage.getItem('team_id'))\r\n      },\r\n      project_info: localStorage.getItem('project_info'),\r\n      visible: false,\r\n      form_word: {\r\n        token: getters.getToken(state),\r\n        project_id: localStorage.getItem('project_id'),\r\n        doc_name: '',\r\n        doc_description: '',\r\n        template_id: ''\r\n      },\r\n      form_page: {\r\n        token: getters.getToken(state),\r\n        username: getters.getUserName(state),\r\n        page_name: '',\r\n        team_id: Number(localStorage.getItem('team_id'))\r\n      },\r\n      form_getDocInfo: {\r\n        token: getters.getToken(state),\r\n        doc_id: localStorage.getItem('doc_id')\r\n      },\r\n      form_deleteMember: {\r\n        token: getters.getToken(state),\r\n        username: getters.getUserName(state),\r\n        user_id: getters.getUserId(state),\r\n        team_id: Number(localStorage.getItem('team_id')),\r\n        deleted_id: null\r\n      },\r\n      form_quitTeam: {\r\n        token: getters.getToken(state),\r\n        username: getters.getUserName(state),\r\n        user_id: getters.getUserId(state),\r\n        team_id: Number(localStorage.getItem('team_id'))\r\n      },\r\n      form_setPerm: {\r\n        token: getters.getToken(state),\r\n        username: getters.getUserName(state),\r\n        user_id: getters.getUserId(state),\r\n        team_id: Number(localStorage.getItem('team_id')),\r\n        member_id: 0,\r\n        perm: null\r\n      },\r\n      project_name: localStorage.getItem('project_name'),\r\n      team_name: localStorage.getItem('team_name'),\r\n      dialogWordVisible: false,\r\n      dialogPageVisible: false,\r\n      dialogMethodVisible: false,\r\n      dialogUpdateProjectVisible: false,\r\n      dialogUpdateDocInfoVisible: false,\r\n      dialogUpdateAxureInfoVisible: false,\r\n      axureList: [],\r\n      deleteMemberList: [],\r\n      docList: [],\r\n      powerOptions: [\r\n        {\r\n          value: 1,\r\n          label: '队长'\r\n        },\r\n        {\r\n          value: 2,\r\n          label: '开发者'\r\n        },\r\n        {\r\n          value: 3,\r\n          label: '观察者'\r\n        }\r\n      ],\r\n      userModel: {\r\n        address: '',\r\n        avatar: '',\r\n        gender: 1,\r\n        id: 1,\r\n        lastLoginIp: '',\r\n        lastLoginTime: '',\r\n        nickName: '',\r\n        status: 0,\r\n        vip: 1\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    this.getDocList()\r\n    this.getAxureList()\r\n    localStorage.setItem('flag', 'user')\r\n    localStorage.setItem('enable', 'true')\r\n  },\r\n  methods: {\r\n    likeAxure(item) {\r\n      this.form_likeAxure.axure_id = item.axure_id\r\n      item.isFavorite = true\r\n      this.$axios.post('/axure/addFavoriteAxure', qs.stringify(this.form_likeAxure))\r\n         .then((res) => {\r\n           if (res.data.success) {\r\n             this.$message.success(res.data.message)\r\n           } else {\r\n             this.$message.error(res.data.message)\r\n           }\r\n         })\r\n    },\r\n    unlikeAxure(item) {\r\n      this.form_likeAxure.axure_id = item.axure_id\r\n      item.isFavorite = false\r\n      this.$axios.post('/axure/deleteFavoriteAxure', qs.stringify(this.form_likeAxure))\r\n         .then((res) => {\r\n           if (res.data.success) {\r\n             this.$message.success(res.data.message)\r\n           } else {\r\n             this.$message.error(res.data.message)\r\n           }\r\n         })\r\n    },\r\n    updateAxureInfo() {\r\n      this.$axios.post('/axure/updateInfo', qs.stringify(this.form_updateAxureInfo))\r\n        .then((res) => {\r\n          // console.log(5)\r\n          if (res.data.success) {\r\n            this.$message.success(res.data.message)\r\n            this.getAxureList()\r\n          } else {\r\n            this.$message.error(res.data.message)\r\n          }\r\n        })\r\n    },\r\n    likeDoc(item) {\r\n      this.form_likeDoc.doc_id = item.doc_id\r\n      this.form_likeDoc.undo = false\r\n      item.is_favorite = true\r\n      this.$axios.post('/user/favorite', qs.stringify(this.form_likeDoc))\r\n         .then((res) => {\r\n           if (res.data.success) {\r\n             this.$message.success(res.data.message)\r\n            //  this.getDocList()\r\n           } else {\r\n             this.$message.error(res.data.message)\r\n           }\r\n         })\r\n    },\r\n    unlikeDoc(item) {\r\n      this.form_likeDoc.doc_id = item.doc_id\r\n      this.form_likeDoc.undo = true\r\n      item.is_favorite = false\r\n      this.$axios.post('/user/favorite', qs.stringify(this.form_likeDoc))\r\n         .then((res) => {\r\n           if (res.data.success) {\r\n             this.$message.success(res.data.message)\r\n            //  this.getDocList()\r\n           } else {\r\n             this.$message.error(res.data.message)\r\n           }\r\n         })\r\n    },\r\n    deleteAxure(item) {\r\n      this.$confirm('此操作将使您删除此原型' + ', 是否继续?', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(() => {\r\n      this.form_deleteAxure.axure_id = item.axure_id\r\n      this.$axios.post('/axure/delete', qs.stringify(this.form_deleteAxure))\r\n        .then((res) => {\r\n          // console.log(5)\r\n          if (res.data.success) {\r\n            this.$message.success(res.data.message)\r\n            this.getAxureList()\r\n          } else {\r\n            this.$message.error(res.data.message)\r\n          }\r\n        })\r\n      }).catch(() => {\r\n        this.$message({\r\n          type: 'info',\r\n          message: '已取消操作'\r\n        })\r\n      })\r\n    },\r\n    toAxureEditor(val) {\r\n      localStorage.setItem('axure_id', val.axure_id)\r\n      localStorage.setItem('axure_name', val.axure_name)\r\n      localStorage.setItem('axure_info', val.axure_info)\r\n      localStorage.setItem('Token', getters.getToken(state))\r\n      this.$router.push('/posterEditor')\r\n    },\r\n    createAxure() {\r\n      this.$axios.post('/axure/create', qs.stringify(this.form_createAxure))\r\n         .then((res) => {\r\n           if (res.data.success) {\r\n             this.$message.success(res.data.message)\r\n             this.getAxureList()\r\n           } else {\r\n             this.$message.error(res.data.message)\r\n           }\r\n         })\r\n    },\r\n    getAxureList() {\r\n      this.loading = true\r\n      this.axureList = []\r\n      this.$axios.post('/axure/getAxureList', qs.stringify(this.form_getAxureList))\r\n        .then((res) => {\r\n          if (res.data.success) {\r\n            for (let i = 0; i < res.data.data.length; i++) {\r\n              const axures = {\r\n                axure_info: null,\r\n                axure_id: null,\r\n                project_id: null,\r\n                axure_name: null,\r\n                title: null,\r\n                config: null,\r\n                items: null,\r\n                last_edit: null,\r\n                create_user: null,\r\n                isFavorite: null\r\n              }\r\n              axures.axure_info = res.data.data[i].axure_info\r\n              axures.axure_id = res.data.data[i].axure_id\r\n              axures.project_id = res.data.data[i].project_id\r\n              axures.axure_name = res.data.data[i].axure_name\r\n              axures.title = res.data.data[i].title\r\n              axures.config = res.data.data[i].config\r\n              axures.items = res.data.data[i].items\r\n              axures.last_edit = res.data.data[i].last_edit\r\n              axures.create_user = res.data.data[i].create_user\r\n              axures.isFavorite = res.data.data[i].isFavorite === 1\r\n              let flag = 0\r\n              for (let i = 0; i < this.axureList.length; i++) {\r\n                if (this.axureList[i].axure_id === axures.axure_id) {\r\n                  flag = 1\r\n                  break\r\n                }\r\n              }\r\n              if (!flag) { this.axureList.push(axures) }\r\n              // this.$message.success(res.data.message)\r\n            }\r\n          } else {\r\n             // this.$message.error(res.data.message)\r\n          }\r\n           this.loading = false\r\n         })\r\n    },\r\n    toDocEditor(val) {\r\n      localStorage.setItem('flag', 'out')\r\n      localStorage.setItem('doc_id', val.doc_id)\r\n      localStorage.setItem('doc_name', val.doc_name)\r\n      localStorage.setItem('is_favorite', val.is_favorite)\r\n      this.$axios.get('/doc/getDocInfo', {\r\n        params: {\r\n          token: getters.getToken(state),\r\n          doc_id: localStorage.getItem('doc_id')\r\n        }\r\n      })\r\n      .then(res => {\r\n        if (res.data.success) {\r\n          localStorage.setItem('doc_content', res.data.data[0].doc_content)\r\n          this.$router.push('/editor/rich-text')\r\n        } else {\r\n          this.$message.error(res.data.message)\r\n        }\r\n      })\r\n    },\r\n    deleteDoc() {\r\n      this.$confirm('此操作将使您删除此文档' + ', 是否继续?', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n    }).then(() => {\r\n      this.$axios.post('/doc/deleteDoc', qs.stringify(this.form_deleteDoc))\r\n        .then((res) => {\r\n          // console.log(5)\r\n          if (res.data.success) {\r\n            this.$message.success(res.data.message)\r\n            this.getDocList()\r\n          } else {\r\n            this.$message.error(res.data.message)\r\n          }\r\n        })\r\n      }).catch(() => {\r\n        this.$message({\r\n          type: 'info',\r\n          message: '已取消操作'\r\n        })\r\n      })\r\n    },\r\n    updateDocInfo() {\r\n      this.$axios.post('/doc/updateDocInfo', qs.stringify(this.form_updateDocInfo))\r\n        .then((res) => {\r\n          // console.log(5)\r\n          if (res.data.success) {\r\n            this.$message.success(res.data.message)\r\n            this.getDocList()\r\n          } else {\r\n            this.$message.error(res.data.message)\r\n          }\r\n        })\r\n    },\r\n    deleteProject() {\r\n      this.$confirm('此操作将使您删除此项目' + ', 是否继续?', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n    }).then(() => {\r\n      this.$axios.post('/project/delete', qs.stringify(this.form_deleteProject))\r\n        .then((res) => {\r\n          // console.log(5)\r\n          if (res.data.success) {\r\n            this.$message.success(res.data.message)\r\n            this.toProject()\r\n          } else {\r\n            this.$message.error(res.data.message)\r\n          }\r\n        })\r\n      }).catch(() => {\r\n        this.$message({\r\n          type: 'info',\r\n          message: '已取消操作'\r\n        })\r\n      })\r\n    },\r\n    updateProject() {\r\n      // this.form_updateProject.project_id = item.project_id\r\n      this.$axios.post('/project/update', qs.stringify(this.form_updateProject))\r\n        .then((res) => {\r\n          // console.log(5)\r\n          if (res.data.success) {\r\n            this.$message.success(res.data.message)\r\n            this.project_name = this.form_updateProject.project_name\r\n            this.project_info = this.form_updateProject.project_info\r\n            localStorage.setItem('project_name', this.project_name)\r\n            localStorage.setItem('project_info', this.project_info)\r\n          } else {\r\n            this.$message.error(res.data.message)\r\n          }\r\n        })\r\n    },\r\n    getDocList() {\r\n      this.docList = []\r\n      this.$axios.get('/doc/getDocList', {\r\n              params: {\r\n                token: getters.getToken(state),\r\n                project_id: localStorage.getItem('project_id')\r\n              }\r\n            })\r\n            .then(res => {\r\n              if (res.data.success) {\r\n                for (let i = 0; i < res.data.data.length; i++) {\r\n              const docs = {\r\n                doc_name: null,\r\n                last_edit_time: null,\r\n                project_id: null,\r\n                doc_description: null,\r\n                creator_id: null,\r\n                doc_content: null,\r\n                creator_name: null,\r\n                doc_id: null,\r\n                is_favorite: null\r\n              }\r\n              docs.doc_name = res.data.data[i].doc_name\r\n              docs.last_edit_time = res.data.data[i].last_edit_time\r\n              docs.project_id = res.data.data[i].project_id\r\n              docs.doc_description = res.data.data[i].doc_description\r\n              docs.creator_id = res.data.data[i].creator_id\r\n              docs.doc_content = res.data.data[i].doc_content\r\n              docs.creator_name = res.data.data[i].creator_name\r\n              docs.doc_id = res.data.data[i].doc_id\r\n              docs.is_favorite = res.data.data[i].is_favorite\r\n              let flag = 0\r\n              for (let i = 0; i < this.docList.length; i++) {\r\n                if (this.docList[i].doc_id === docs.doc_id) {\r\n                  flag = 1\r\n                  break\r\n                }\r\n              }\r\n              if (!flag) { this.docList.push(docs) }\r\n              // this.$message.success(res.data.message)\r\n            }\r\n              } else {\r\n                this.$message.error(res.data.message)\r\n              }\r\n            })\r\n    },\r\n    createUML() {\r\n      router.push('/drawio')\r\n      // window.open('https://www.draw.io/index.html', '_blank')\r\n      // window.open = 'https://www.draw.io/index.html'\r\n    },\r\n    CreatePage() {\r\n      this.$message.error('还没写接口哪！')\r\n    },\r\n    setPerm(item) {\r\n      this.form_setPerm.member_id = item.id\r\n      this.$axios.post('/team/set_perm', qs.stringify(this.form_setPerm))\r\n        .then((res) => {\r\n          // console.log(5)\r\n          if (res.data.result === 7) {\r\n            this.$message.success(res.data.message)\r\n          } else {\r\n            this.$message.error(res.data.message)\r\n          }\r\n          this.getMemberList()\r\n        })\r\n    },\r\n    deleteItem(item) {\r\n      if (item.id === this.form_deleteMember.user_id) {\r\n        this.$confirm('此操作将使您退出此团队' + ', 是否继续?', '提示', {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n      }).then(() => {\r\n        this.quitTeam()\r\n        }).catch(() => {\r\n          this.$message({\r\n            type: 'info',\r\n            message: '已取消操作'\r\n          })\r\n        })\r\n      } else {\r\n        this.$confirm('此操作将踢出用户成员' + item.username + ', 是否继续?', '提示', {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n      }).then(() => {\r\n        this.deleteMember(item)\r\n        }).catch(() => {\r\n          this.$message({\r\n            type: 'info',\r\n            message: '已取消操作'\r\n          })\r\n        })\r\n      }\r\n    },\r\n    handleSelectionChange(items) {\r\n      this.deleteMemberList = items\r\n    },\r\n    deleteMultiItem() {\r\n      this.$confirm('此操作将踢出您选中的所有成员, 是否继续?', '提示', {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n      }).then(() => {\r\n        for (let i = 0; i < this.deleteMemberList.length; i++) {\r\n          this.deleteMember(this.deleteMemberList[i])\r\n        }\r\n        this.getMemberList()\r\n        }).catch(() => {\r\n          this.$message({\r\n            type: 'info',\r\n            message: '已取消踢出'\r\n          })\r\n        })\r\n    },\r\n    deleteMember(item) {\r\n      this.form_deleteMember.deleted_id = item.id\r\n      // console.log(item.id)\r\n      this.$axios.post('/team/delete_member', qs.stringify(this.form_deleteMember))\r\n        .then((res) => {\r\n          // console.log(5)\r\n          if (res.data.result === 5) {\r\n            this.$message.success(res.data.message)\r\n          } else {\r\n            this.$message.error(res.data.message)\r\n          }\r\n          this.getMemberList()\r\n        })\r\n    },\r\n    quitTeam() {\r\n      this.$axios.post('/team/quit_team', qs.stringify(this.form_quitTeam))\r\n        .then((res) => {\r\n          if (res.data.result === 5) {\r\n            this.$message.success(res.data.message)\r\n          } else {\r\n            this.$message.error(res.data.message)\r\n          }\r\n          this.onGroupSpace()\r\n        })\r\n    },\r\n    onGroupSpace() {\r\n      store.toGroupSpace && store.toGroupSpace()\r\n    },\r\n    clearList() {\r\n      this.memberList = []\r\n    },\r\n    onFile() {\r\n      this.$router.push('/list/table-group-file')\r\n    },\r\n    toProject() {\r\n      this.$router.replace('/list/table-group-message')\r\n    },\r\n    createWord() {\r\n      if (this.form_word.template_id === 0) { this.form_word.template_id = 4 }\r\n      if (this.form_word.template_id === 1) { this.form_word.template_id = 5 }\r\n      if (this.form_word.template_id === 2) { this.form_word.template_id = 6 }\r\n      if (this.form_word.template_id === 3) { this.form_word.template_id = 7 }\r\n      this.$axios.post('/doc/newDoc', qs.stringify(this.form_word))\r\n         .then((res) => {\r\n           if (res.data.success) {\r\n             this.$message.success(res.data.message)\r\n             this.getDocList()\r\n           } else {\r\n             this.$message.error(res.data.message)\r\n           }\r\n         })\r\n    },\r\n    onRichTextEditor() {\r\n      store.toRichTextEditor && store.toRichTextEditor()\r\n    },\r\n    onChooseTemplate() {\r\n      store.toChooseTemplate && store.toChooseTemplate()\r\n    },\r\n    onSingleSuccess({ res }) {\r\n      if (res.status !== 200) {\r\n        this.$errorMsg(res.msg)\r\n      } else {\r\n        this.userModel = res.obj\r\n      }\r\n    },\r\n    beforeUpload(file) {\r\n      const size = file.size\r\n      if (size / 1024 > 500) {\r\n        this.$errorMsg('上传文件最大不能超过500K')\r\n        return false\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.fontClass {\r\n  font-family: 等线;\r\n  font-weight: bold;\r\n  font-size: 20px;\r\n}\r\n.morebutton {\r\n  padding: 5px;\r\n  border: 0;\r\n}\r\n.button-style {\r\n  margin: 10px;\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n  border-width: 2px;\r\n  font-family: 等线;\r\n  color: #464646;\r\n  height: 45px;\r\n}\r\n.back-button{\r\n  margin-top: 20px;\r\n  font-size: 26px;\r\n  font-weight: bold;\r\n  color: black;\r\n  padding: 5px;\r\n  border: 0;\r\n}\r\n.spcbutton-style {\r\n  margin: 20px;\r\n  font-size: 14px;\r\n  font-weight: bold;\r\n  color: black;\r\n  height: 35px;\r\n}\r\n.projecttitle {\r\n  font-size: 46px;\r\n  font-weight: bold;\r\n  margin-left: 10px;\r\n  margin-top: 10px;\r\n  margin-bottom: 20px;\r\n  float: left;\r\n  font-family: 等线;\r\n}\r\n.teamtitle {\r\n  margin-top: 30px;\r\n  margin-left: 20px;\r\n  font-family: 黑体;\r\n  font-size: 18px;\r\n  color: #777777;\r\n  float:right;\r\n  white-space: nowrap;\r\n}\r\n.temptablebody{\r\n  height: 500px;\r\n  width: 75%;\r\n  float: left;\r\n}\r\n.messagecss{\r\n  width: 947px;\r\n  margin: 10px;\r\n}\r\n.rightside{\r\n  float: right;\r\n  width: 23%;\r\n  margin: 10px;\r\n  height: 500px;\r\n}\r\n.rightsidefont{\r\n  font-size: 25px;\r\n  margin: 10px;\r\n}\r\n.image{\r\n  width: 300px;\r\n  height: 300px;\r\n}\r\n</style>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/views/list/table-group-project.vue b/src/views/list/table-group-project.vue
--- a/src/views/list/table-group-project.vue	(revision 3a8e197a114366126ce665ea8768246ff9ca0319)
+++ b/src/views/list/table-group-project.vue	(date 1660125387453)
@@ -126,7 +126,7 @@
     </el-dialog>
 
     <el-dialog title="创建原型" :visible.sync="dialogPageVisible">
-      <el-form :model="form_page">
+      <el-form :model="form_createAxure">
         <el-form-item label="原型名称" :label-width="formLabelWidth">
           <el-input v-model="form_createAxure.axure_name" autocomplete="off" />
         </el-form-item>
@@ -135,25 +135,23 @@
         </el-form-item>
       </el-form>
       <div slot="footer" class="dialog-footer">
-        <el-button @click="dialogPageVisible = false; form_page.page_name = '' ">取 消</el-button>
-        <el-button @click="createAxure(), dialogPageVisible = false">确 定</el-button>
+        <el-button @click="dialogPageVisible = false; form_createAxure.axure_name = '' ">取消</el-button>
+        <el-button @click="createAxure(), form_createAxure.axure_name = '',dialogPageVisible = false">空模板创建</el-button>
       </div>
       <el-row>
-        <el-col v-for="(o, index) in 2" :key="o" :span="8" :offset="index > 0 ? 2 : 0">
+        <el-col v-for="(o, index) in 4" :key="o" :span="8" :offset="index > 0 ? 2 : 0">
           <el-card :body-style="{ padding: '0px' }">
-            <img src="../../assets/work_logo.png" class="image" />
             <div style="padding: 14px;">
-              <span>模板{{ index }}</span>
+              <span v-if="index === 0">登录模板</span>
               <div class="bottom clearfix">
-                <time class="time">{{ currentDate }}</time>
-                <el-button type="text" class="button">预览</el-button>
+                <el-button type="text" class="button" @click="flag=index+1, toPreview()">预览</el-button>
+                <el-button type="text" class="button" @click="form_createAxure.axure_template_id = index + 1, createAxure(), dialogPageVisible = false">创建</el-button>
               </div>
             </div>
           </el-card>
         </el-col>
       </el-row>
     </el-dialog>
-
     <el-dialog title="修改项目信息" :visible.sync="dialogUpdateProjectVisible">
       <el-form :model="form_updateProject">
         <el-form-item label="项目新名称" :label-width="formLabelWidth">
@@ -395,6 +393,7 @@
     return {
       visible_setPerm: true,
       loading: false,
+      flag: '',
       form_likeAxure: {
         token: getters.getToken(state),
         axure_id: null
@@ -418,7 +417,8 @@
         token: getters.getToken(state),
         axure_name: null,
         axure_info: null,
-        project_id: localStorage.getItem('project_id')
+        project_id: localStorage.getItem('project_id'),
+        axure_template_id: 0
       },
       form_getAxureList: {
         token: getters.getToken(state),
@@ -532,12 +532,30 @@
     }
   },
   created() {
+    this.getModel()
     this.getDocList()
     this.getAxureList()
     localStorage.setItem('flag', 'user')
     localStorage.setItem('enable', 'true')
   },
   methods: {
+    toPreview() {
+      if (this.flag === 1) {
+        window.open('http://101.42.171.88:8090/file/1/2022-08-10_17:50:41.606_dcc3626135d50ed9d2c3c52a7a8678c.jpg')
+      }
+    },
+    getModel() {
+      this.$axios.get('/axure/getAxureTemplateList', {
+        params: {
+          token: getters.getToken(state)
+        }
+      })
+      .then(res => {
+        if (res.data.success) {
+          console.log(res.data.data)
+        }
+      })
+    },
     likeAxure(item) {
       this.form_likeAxure.axure_id = item.axure_id
       item.isFavorite = true
@@ -834,9 +852,6 @@
       // window.open('https://www.draw.io/index.html', '_blank')
       // window.open = 'https://www.draw.io/index.html'
     },
-    CreatePage() {
-      this.$message.error('还没写接口哪！')
-    },
     setPerm(item) {
       this.form_setPerm.member_id = item.id
       this.$axios.post('/team/set_perm', qs.stringify(this.form_setPerm))
Index: src/views/posterEditor/index.vue
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><template>\r\n  <div class=\"main-container\">\r\n    <el-row style=\"background: #2f2f2f; min-height: 40px\">\r\n      <el-col :span=\"8\">\r\n        <el-button class=\"backbutton\" style=\"margin-left: 20px; margin-top: 3px\" @click=\"back\">\r\n          <i class=\"el-icon-back\" style=\"font-size: x-large\"></i>\r\n        </el-button>\r\n      </el-col>\r\n      <el-col :span=\"8\" style=\"text-align: center; margin-top: 12px\">\r\n        <div style=\"font-size: 16px; color: #ececec\" contenteditable=\"true\">\r\n          {{ axure_name }}\r\n        </div>\r\n        <div>\r\n          <!--          <el-button style=\"padding: 5px; background: #2f2f2f; border: 0\">-->\r\n          <!--            <i class=\"el-icon-more\" style=\"font-size: large; color: #ececec\"></i>-->\r\n          <!--          </el-button>-->\r\n        </div>\r\n      </el-col>\r\n    </el-row>\r\n    <div class=\"poster-editor\" :class=\"{ 'init-loading': initLoading }\">\r\n      <div class=\"base\">\r\n        <!-- 左侧添加组件栏 -->\r\n        <left-side />\r\n        <!-- 主要操作区域 -->\r\n        <main-component ref=\"main\" />\r\n        <!-- 常用功能栏 -->\r\n        <extend-side-bar />\r\n        <!-- 组件编辑区域 -->\r\n        <control-component />\r\n      </div>\r\n      <!-- 图层面板 -->\r\n      <transition name=\"el-zoom-in-top\">\r\n        <layer-panel v-show=\"layerPanelOpened\" />\r\n      </transition>\r\n    </div>\r\n    <div id=\"drag\" v-drag class=\"drag-box\">\r\n      <div class=\"boxhead\">\r\n        <i class=\"el-icon-menu\"></i>\r\n        <p>项目原型</p>\r\n      </div>\r\n      <el-table\r\n        ref=\"table\"\r\n        v-loading=\"loading\"\r\n        :data=\"axureList\"\r\n        style=\"margin-top:50px\"\r\n        @row-dblclick=\"toAxureEditor\"\r\n      >\r\n        <el-table-column\r\n          align=\"left\"\r\n          label=\"原型列表\"\r\n          prop=\"axure_name\"\r\n        />\r\n      </el-table>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapState, mapGetters, mapActions } from './poster.vuex'\r\nimport controlComponent from './control/index'\r\nimport mainComponent from './main/index'\r\nimport leftSide from './leftSide/index'\r\nimport extendSideBar from './extendSideBar'\r\nimport layerPanel from './extendSideBar/layerPanel'\r\nimport store from '@/store'\r\nimport posterModule from '@/store/modules/poster/poster'\r\nimport router from '@/router'\r\nimport qs from 'qs'\r\nimport { getters } from '@/store/modules/user.js'\r\nimport { state } from '@/store/modules/user.js'\r\n\r\nconst DELETE_KEY = 8 // delete\r\nconst COPY_KEY = 67 // c\r\nconst PASTE_KEY = 86 // v\r\nconst LAYER_PANEL_KEY = 76 // l\r\nconst REFERENCE_LINE_KEY = 72 // h\r\nconst UNDO_KEY = 90 // z\r\nconst BACKUP_KEY = 83 // s\r\nconst SELECT_ALL_KEY = 65 // a\r\n\r\nexport default {\r\n  components: {\r\n    controlComponent,\r\n    mainComponent,\r\n    leftSide,\r\n    extendSideBar,\r\n    layerPanel\r\n  },\r\n  directives: {\r\n    drag: {\r\n      // 指令的定义\r\n      bind: function(el) {\r\n        const oDiv = el // 获取当前元素\r\n        oDiv.onmousedown = (e) => {\r\n          console.log('onmousedown')\r\n          // 算出鼠标相对元素的位置\r\n          const disX = e.clientX - oDiv.offsetLeft\r\n          const disY = e.clientY - oDiv.offsetTop\r\n\r\n          document.onmousemove = (e) => {\r\n            // 用鼠标的位置减去鼠标相对元素的位置，得到元素的位置\r\n            const left = e.clientX - disX\r\n            const top = e.clientY - disY\r\n\r\n            oDiv.style.left = left + 'px'\r\n            oDiv.style.top = top + 'px'\r\n          }\r\n\r\n          document.onmouseup = (e) => {\r\n            document.onmousemove = null\r\n            document.onmouseup = null\r\n          }\r\n        }\r\n      }\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      form_update: {\r\n        token: localStorage.getItem('Token'),\r\n        axure_id: localStorage.getItem('axure_id')\r\n      },\r\n      axure_name: localStorage.getItem('axure_name'),\r\n      pageConfig: {\r\n        pageConfigId: '',\r\n        config: '',\r\n        items: ''\r\n      },\r\n      initLoading: false,\r\n      axureList: [],\r\n      loading: false,\r\n      form_getAxureList: {\r\n        token: getters.getToken(state),\r\n        project_id: localStorage.getItem('project_id')\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapState([\r\n      'posterItems',\r\n      'layerPanelOpened',\r\n      'activeItems',\r\n      'copiedWidgets',\r\n      'referenceLineOpened',\r\n      'isUnsavedState'\r\n    ]),\r\n    ...mapGetters(['activeItemIds'])\r\n  },\r\n  watch: {\r\n    pageConfig: {\r\n      handle (newName, oldName) {\r\n        console.log(\"改改改\")\r\n      },\r\n      deep: true\r\n    }\r\n  },\r\n  beforeRouteLeave(to, from, next) {\r\n      next()\r\n  },\r\n  beforeCreate() {\r\n    if (!store.hasModule('poster')) {\r\n      /** 注册poster-vuex模块 */\r\n      store.registerModule('poster', posterModule)\r\n    }\r\n  },\r\n  async created() {\r\n    this.getAxureList()\r\n    this.initLoading = true\r\n    // if (!store.hasModule('poster')) return\r\n    const loading = this.$loading({\r\n      lock: true,\r\n      text: '正在初始化编辑器',\r\n      spinner: 'el-icon-loading',\r\n      background: 'rgba(255, 255, 255, 0.6)'\r\n    })\r\n    await this.resetState()\r\n    await this.updatePage()\r\n    loading.close()\r\n    this.initLoading = false\r\n  },\r\n  async mounted() {\r\n    await this.$store.dispatch('backup/recover', null)\r\n    document.addEventListener('keydown', this.keydownHandle)\r\n    this.body = document.body\r\n    this.mainPanelRef = this.$refs.main.$refs.mainPanel\r\n    //初始化websocket\r\n    // this.initWebSocket()\r\n    // this.$nextTick(() => {\r\n    //   setInterval(this.save, 1000)\r\n    // })\r\n  },\r\n  beforeDestroy() {\r\n    document.removeEventListener('keydown', this.keydownHandle)\r\n    this.killAutoSaveTask()\r\n  },\r\n  destroyed: function () { // 离开页面生命周期函数\r\n    // this.websocketclose();\r\n  },\r\n  methods: {\r\n    getAxureList() {\r\n      this.loading = true\r\n      this.axureList = []\r\n      this.$axios.post('/axure/getAxureList', qs.stringify(this.form_getAxureList))\r\n        .then((res) => {\r\n          if (res.data.success) {\r\n            for (let i = 0; i < res.data.data.length; i++) {\r\n              const axures = {\r\n                axure_info: null,\r\n                axure_id: null,\r\n                project_id: null,\r\n                axure_name: null,\r\n                title: null,\r\n                config: null,\r\n                items: null,\r\n                last_edit: null,\r\n                create_user: null,\r\n                isFavorite: null\r\n              }\r\n              axures.axure_info = res.data.data[i].axure_info\r\n              axures.axure_id = res.data.data[i].axure_id\r\n              axures.project_id = res.data.data[i].project_id\r\n              axures.axure_name = res.data.data[i].axure_name\r\n              axures.title = res.data.data[i].title\r\n              axures.config = res.data.data[i].config\r\n              axures.items = res.data.data[i].items\r\n              axures.last_edit = res.data.data[i].last_edit\r\n              axures.create_user = res.data.data[i].create_user\r\n              axures.isFavorite = res.data.data[i].isFavorite === 1\r\n              let flag = 0\r\n              for (let i = 0; i < this.axureList.length; i++) {\r\n                if (this.axureList[i].axure_id === axures.axure_id) {\r\n                  flag = 1\r\n                  break\r\n                }\r\n              }\r\n              if (!flag) { this.axureList.push(axures) }\r\n              // this.$message.success(res.data.message)\r\n            }\r\n          } else {\r\n             // this.$message.error(res.data.message)\r\n          }\r\n           this.loading = false\r\n         })\r\n    },\r\n    toAxureEditor(val) {\r\n      localStorage.setItem('axure_id', val.axure_id)\r\n      localStorage.setItem('axure_name', val.axure_name)\r\n      localStorage.setItem('axure_info', val.axure_info)\r\n      localStorage.setItem('Token', getters.getToken(state))\r\n      this.$router.push('/redirect/posterEditor')\r\n    },\r\n    ...mapActions([\r\n      'replacePosterItems',\r\n      'replaceActiveItems',\r\n      'pasteWidget',\r\n      'copyWidget',\r\n      'setLayerPanel',\r\n      'setReferenceLineVisible',\r\n      'resetState',\r\n      'updatePageConfig'\r\n    ]),\r\n    ...mapActions({\r\n      undo: 'history/undo',\r\n      redo: 'history/redo',\r\n      backupInit: 'backup/init',\r\n      killAutoSaveTask: 'backup/killAutoSaveTask',\r\n      backupInvoker: 'backup/invoker'\r\n    }),\r\n    save() {\r\n      /*\r\n      const requestData = {\r\n            items: [\r\n                {\r\n                    type: poster.state.background.type,\r\n                    content: '',\r\n                    config: JSON.stringify(poster.state.background)\r\n                },\r\n                ...poster.state.posterItems.map((item, index) => {\r\n                    return {\r\n                        type: item.type,\r\n                        content: '',\r\n                        config: JSON.stringify({\r\n                            ...item,\r\n                            _sort: index + 1\r\n                        })\r\n                    }\r\n                })\r\n            ]\r\n        }\r\n        */\r\n      console.log(\"test>>>\")\r\n      // console.log(JSON.stringify(requestData))\r\n      // console.log(poster.getters.posterItems)\r\n      console.log(\"<<<test\")\r\n      const res = this.$store.dispatch('poster/saveActivityPageConfig', null)\r\n      res.then(r => {\r\n        this.websock.send(JSON.stringify({\r\n          type: \"axure\",\r\n          id: localStorage.getItem('axure_id'),\r\n          config: r.config,\r\n          items: r.items,\r\n          name: '',\r\n          content: ''\r\n      }))\r\n      })\r\n    },\r\n    back() {\r\n      router.push('/list/table-group-project')\r\n    },\r\n    // getConfig () {\r\n    //   this.$axios.post('/axure/getAxureInfo', qs.stringify(this.form_update))\r\n    //     .then(res => {\r\n    //       if (res.data.success) {\r\n    //         this.pageConfig.pageConfigId = res.data.data.config_id\r\n    //           this.pageConfig.config = JSON.parse(res.data.data.config)\r\n    //           this.pageConfig.items.JSON.parse(res.data.data.items)\r\n    //       }\r\n    //       })\r\n    //         console.log(this.pageConfig)\r\n    // },\r\n    updatePage() {\r\n      this.$axios.post('/axure/getAxureInfo', qs.stringify(this.form_update))\r\n        .then(res => {\r\n          if (res.data.success) {\r\n            let pageConfig = {}\r\n            pageConfig = {\r\n              pageConfigId: res.data.data[0].config_id,\r\n              config: JSON.parse(res.data.data[0].config),\r\n              items: JSON.parse(res.data.data[0].items),\r\n              title: res.data.data[0].title\r\n            }\r\n            this.$store.dispatch('poster/updatePageConfig', pageConfig)\r\n          }\r\n        })\r\n    },\r\n    keydownHandle(e) {\r\n      if (e.target !== this.body) {\r\n        return\r\n      }\r\n      const keyCode = e.keyCode\r\n      const ctrl = e.ctrlKey || e.metaKey\r\n      const shift = e.shiftKey\r\n      switch (true) {\r\n        case keyCode === DELETE_KEY:\r\n          if (this.activeItemIds.length > 0) {\r\n            this.replacePosterItems(\r\n              this.posterItems.filter(\r\n                item => !this.activeItemIds.includes(item.id)\r\n              )\r\n            )\r\n          }\r\n          break\r\n        case keyCode === PASTE_KEY && ctrl:\r\n          if (this.copiedWidgets) {\r\n            this.pasteWidget()\r\n          }\r\n          break\r\n        case keyCode === COPY_KEY && ctrl:\r\n          if (this.activeItems.length > 0) {\r\n            // const copiedWidgets = []\r\n            // const widgetRefs = this.mainPanelRef.$refs\r\n            // this.activeItemIds.forEach((itemId) => {\r\n            // const widgetRef = widgetRefs[itemId][0]\r\n            // copiedWidgets.push(getCopyData(widgetRef.item, widgetRef._self))\r\n            // })\r\n            const copiedWidgets = [...this.activeItems].map(item => {\r\n              item._copyFrom = 'command'\r\n              return item\r\n            })\r\n            this.copyWidget(copiedWidgets)\r\n          }\r\n          break\r\n        case keyCode === LAYER_PANEL_KEY && ctrl:\r\n          e.preventDefault()\r\n          this.setLayerPanel(!this.layerPanelOpened)\r\n          break\r\n        case keyCode === REFERENCE_LINE_KEY && ctrl:\r\n          e.preventDefault()\r\n          this.setReferenceLineVisible(!this.referenceLineOpened)\r\n          break\r\n        case keyCode === UNDO_KEY && ctrl && shift:\r\n          this.redo()\r\n          break\r\n        case keyCode === UNDO_KEY && ctrl:\r\n          this.undo()\r\n          break\r\n        case keyCode === BACKUP_KEY && ctrl:\r\n          e.preventDefault()\r\n          this.backupInvoker()\r\n          break\r\n        case keyCode === SELECT_ALL_KEY:\r\n          e.preventDefault()\r\n          this.replaceActiveItems(this.posterItems)\r\n          break\r\n        default:\r\n          break\r\n      }\r\n    }/*,\r\n    initWebSocket: function () { // 建立连接\r\n        // WebSocket与普通的请求所用协议有所不同，ws等同于http，wss等同于https\r\n        // var url = \" ws://101.42.171.88:8090/ws\"\r\n        var url = \" ws://localhost:8090/ws\"\r\n        this.websock = new WebSocket(url);\r\n        this.websock.onopen = this.websocketonopen;\r\n        // this.websock.send = this.websocketsend;\r\n        this.websock.onerror = this.websocketonerror;\r\n        this.websock.onmessage = this.websocketonmessage;\r\n        this.websock.onclose = this.websocketclose;\r\n      },\r\n    // 连接成功后调用\r\n    websocketonopen: function () {\r\n      this.websock.send(JSON.stringify({\r\n        token: getters.getToken(state),\r\n        user_id: getters.getUserId(state),\r\n        type: \"axure\",\r\n        id: localStorage.getItem('axure_id')\r\n      }))\r\n      console.log(\"WebSocket连接成功\");\r\n    },\r\n    // 发生错误时调用\r\n    websocketonerror: function () {\r\n      console.log(\"WebSocket连接发生错误\");\r\n    },\r\n    // 给后端发消息时调用\r\n    websocketsend: function () {\r\n      console.log(\"WebSocket连接发生错误\");\r\n    },\r\n    // 接收后端消息\r\n    // vue 客户端根据返回的cmd类型处理不同的业务响应\r\n    websocketonmessage: function (e) {\r\n      let pageConfig = {}\r\n      const res = JSON.parse(e.data)\r\n      // console.log(res.items)\r\n      pageConfig = {\r\n        pageConfigId: 0,\r\n        config: JSON.parse(res.config),\r\n        items: JSON.parse(res.items)\r\n      }\r\n      this.$store.dispatch('poster/updatePageConfig', pageConfig)\r\n    },\r\n    // 关闭连接时调用\r\n    websocketclose: function (e) {\r\n      console.log(\"connection closed (\" + e.code + \")\");\r\n    }*/,\r\n    sendMsg() {\r\n      // this.websock.send(JSON.stringify({\r\n      //   type: \"axure\",\r\n      //   id: localStorage.getItem('axure_id'),\r\n      //   config: this.pageConfig.config,\r\n      //   items: this.pageConfig.items,\r\n      //   config_id: this.pageConfig.pageConfigId\r\n      // }))\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n::v-deep .title {\r\n  color: #2c2c2c;\r\n  background-color: #2c2c2c;\r\n}\r\n.drag-box {\r\n  position: absolute;\r\n  top: 100px;\r\n  left: 40px;\r\n  width: 240px;\r\n  height: 600px;\r\n  background: #ffffff;\r\n  border-radius: 5px;\r\n  box-shadow: 0px 4px 12px rgba(0, 0, 0, .15);\r\n}\r\n.boxhead {\r\n  position: absolute;\r\n  top: 0px;\r\n  left: 0px;\r\n  width: 240px;\r\n  height: 40px;\r\n  background: #fffaf6;\r\n  border-radius: 5px;\r\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, .1);\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-items: center;\r\n  color: #565656;\r\n}\r\n.backbutton {\r\n  color: white;\r\n  background: #2c2c2c;\r\n  height: 30px;\r\n  border: 0;\r\n  margin-top: 5px;\r\n  padding: 5px;\r\n}\r\n.backbutton:hover {\r\n  color: white;\r\n  background: #000000;\r\n  height: 35px;\r\n}\r\n.backbutton:focus {\r\n  color: white;\r\n  background: #000000;\r\n  height: 35px;\r\n}\r\n.head {\r\n  background: #2c2c2c;\r\n  min-height: 5%;\r\n}\r\n.poster-editor {\r\n  width: 100%;\r\n  min-width: 900px;\r\n  height: 96%;\r\n  background-color: #fff;\r\n  position: fixed;\r\n  &.init-loading {\r\n    filter: blur(6px);\r\n  }\r\n  .base {\r\n    width: 100%;\r\n    height: 100%;\r\n    position: relative;\r\n    display: flex;\r\n  }\r\n  .left-side {\r\n    height: 100%;\r\n  }\r\n  .poster-editor-main {\r\n    flex: 1;\r\n    height: 100%;\r\n    box-sizing: border-box;\r\n  }\r\n  .extend-side-bar {\r\n    width: 50px;\r\n    height: 100%;\r\n    border-left: 1px solid $colorBorder;\r\n  }\r\n  .poster-editor-control {\r\n    width: 200px;\r\n    height: 100%;\r\n    box-sizing: border-box;\r\n    border-left: 1px solid $colorBorder;\r\n  }\r\n}\r\n</style>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/views/posterEditor/index.vue b/src/views/posterEditor/index.vue
--- a/src/views/posterEditor/index.vue	(revision 3a8e197a114366126ce665ea8768246ff9ca0319)
+++ b/src/views/posterEditor/index.vue	(date 1660110829247)
@@ -149,7 +149,7 @@
   watch: {
     pageConfig: {
       handle (newName, oldName) {
-        console.log("改改改")
+        console.log('改改改')
       },
       deep: true
     }
@@ -183,7 +183,7 @@
     document.addEventListener('keydown', this.keydownHandle)
     this.body = document.body
     this.mainPanelRef = this.$refs.main.$refs.mainPanel
-    //初始化websocket
+    // 初始化websocket
     // this.initWebSocket()
     // this.$nextTick(() => {
     //   setInterval(this.save, 1000)
@@ -288,14 +288,14 @@
             ]
         }
         */
-      console.log("test>>>")
+      console.log('test>>>')
       // console.log(JSON.stringify(requestData))
       // console.log(poster.getters.posterItems)
-      console.log("<<<test")
+      console.log('<<<test')
       const res = this.$store.dispatch('poster/saveActivityPageConfig', null)
       res.then(r => {
         this.websock.send(JSON.stringify({
-          type: "axure",
+          type: 'axure',
           id: localStorage.getItem('axure_id'),
           config: r.config,
           items: r.items,
@@ -316,6 +316,7 @@
     //           this.pageConfig.items.JSON.parse(res.data.data.items)
     //       }
     //       })
+    //
     //         console.log(this.pageConfig)
     // },
     updatePage() {
@@ -395,8 +396,7 @@
         default:
           break
       }
-    }/*,
-    initWebSocket: function () { // 建立连接
+    }, /*,    initWebSocket: function () { // 建立连接
         // WebSocket与普通的请求所用协议有所不同，ws等同于http，wss等同于https
         // var url = " ws://101.42.171.88:8090/ws"
         var url = " ws://localhost:8090/ws"
@@ -441,7 +441,7 @@
     // 关闭连接时调用
     websocketclose: function (e) {
       console.log("connection closed (" + e.code + ")");
-    }*/,
+    }*/
     sendMsg() {
       // this.websock.send(JSON.stringify({
       //   type: "axure",
