Index: src/views/posterEditor/index.vue
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><template>\r\n  <div class=\"main-container\">\r\n    <el-row style=\"background: #2f2f2f; min-height: 40px\">\r\n      <el-col :span=\"8\">\r\n        <el-button class=\"backbutton\" style=\"margin-left: 20px; margin-top: 3px\" @click=\"back\">\r\n          <i class=\"el-icon-back\" style=\"font-size: x-large\"></i>\r\n        </el-button>\r\n      </el-col>\r\n      <el-col :span=\"8\" style=\"text-align: center; margin-top: 12px\">\r\n        <div style=\"font-size: 16px; color: #ececec\" contenteditable=\"true\">\r\n          原型名称\r\n        </div>\r\n        <div>\r\n<!--          <el-button style=\"padding: 5px; background: #2f2f2f; border: 0\">-->\r\n<!--            <i class=\"el-icon-more\" style=\"font-size: large; color: #ececec\"></i>-->\r\n<!--          </el-button>-->\r\n        </div>\r\n      </el-col>\r\n    </el-row>\r\n    <div class=\"poster-editor\" :class=\"{ 'init-loading': initLoading }\">\r\n      <div class=\"base\">\r\n        <!-- 左侧添加组件栏 -->\r\n        <left-side />\r\n        <!-- 主要操作区域 -->\r\n        <main-component ref=\"main\" />\r\n        <!-- 常用功能栏 -->\r\n        <extend-side-bar />\r\n        <!-- 组件编辑区域 -->\r\n        <control-component />\r\n      </div>\r\n      <!-- 图层面板 -->\r\n      <transition name=\"el-zoom-in-top\">\r\n        <layer-panel v-show=\"layerPanelOpened\" />\r\n      </transition>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapState, mapGetters, mapActions } from './poster.vuex'\r\nimport controlComponent from './control/index'\r\nimport mainComponent from './main/index'\r\nimport leftSide from './leftSide/index'\r\nimport extendSideBar from './extendSideBar'\r\nimport layerPanel from './extendSideBar/layerPanel'\r\nimport store from '@/store'\r\nimport posterModule from '@/store/modules/poster/poster'\r\nimport router from '@/router'\r\n\r\nconst DELETE_KEY = 8 // delete\r\nconst COPY_KEY = 67 // c\r\nconst PASTE_KEY = 86 // v\r\nconst LAYER_PANEL_KEY = 76 // l\r\nconst REFERENCE_LINE_KEY = 72 // h\r\nconst UNDO_KEY = 90 // z\r\nconst BACKUP_KEY = 83 // s\r\nconst SELECT_ALL_KEY = 65 // a\r\n\r\nexport default {\r\n  components: {\r\n    controlComponent,\r\n    mainComponent,\r\n    leftSide,\r\n    extendSideBar,\r\n    layerPanel\r\n  },\r\n  data() {\r\n    return {\r\n      initLoading: false\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapState([\r\n      'posterItems',\r\n      'layerPanelOpened',\r\n      'activeItems',\r\n      'copiedWidgets',\r\n      'referenceLineOpened',\r\n      'isUnsavedState'\r\n    ]),\r\n    ...mapGetters(['activeItemIds'])\r\n  },\r\n  beforeRouteLeave(to, from, next) {\r\n    if (this.isUnsavedState) {\r\n      const answer = window.confirm(\r\n        '当前页面配置未保存,退出将不会保存,是否继续退出？'\r\n      )\r\n      if (answer) {\r\n        next()\r\n      } else {\r\n        next(false)\r\n      }\r\n    } else {\r\n      next()\r\n    }\r\n  },\r\n  beforeCreate() {\r\n    if (!store.hasModule('poster')) {\r\n      /** 注册poster-vuex模块 */\r\n      store.registerModule('poster', posterModule)\r\n    }\r\n  },\r\n  async created() {\r\n    this.initLoading = true\r\n    // if (!store.hasModule('poster')) return\r\n    const loading = this.$loading({\r\n      lock: true,\r\n      text: '正在初始化编辑器',\r\n      spinner: 'el-icon-loading',\r\n      background: 'rgba(255, 255, 255, 0.6)'\r\n    })\r\n    await this.resetState()\r\n    loading.close()\r\n    this.initLoading = false\r\n  },\r\n  async mounted() {\r\n    document.addEventListener('keydown', this.keydownHandle)\r\n    this.body = document.body\r\n    this.mainPanelRef = this.$refs.main.$refs.mainPanel\r\n  },\r\n  beforeDestroy() {\r\n    document.removeEventListener('keydown', this.keydownHandle)\r\n    this.killAutoSaveTask()\r\n  },\r\n  methods: {\r\n    ...mapActions([\r\n      'replacePosterItems',\r\n      'replaceActiveItems',\r\n      'pasteWidget',\r\n      'copyWidget',\r\n      'setLayerPanel',\r\n      'setReferenceLineVisible',\r\n      'resetState'\r\n    ]),\r\n    ...mapActions({\r\n      undo: 'history/undo',\r\n      redo: 'history/redo',\r\n      backupInit: 'backup/init',\r\n      killAutoSaveTask: 'backup/killAutoSaveTask',\r\n      backupInvoker: 'backup/invoker'\r\n    }),\r\n    back() {\r\n      router.push('/list/table-group-project')\r\n    },\r\n    keydownHandle(e) {\r\n      if (e.target !== this.body) {\r\n        return\r\n      }\r\n      const keyCode = e.keyCode\r\n      const ctrl = e.ctrlKey || e.metaKey\r\n      const shift = e.shiftKey\r\n      switch (true) {\r\n        case keyCode === DELETE_KEY:\r\n          if (this.activeItemIds.length > 0) {\r\n            this.replacePosterItems(\r\n              this.posterItems.filter(\r\n                item => !this.activeItemIds.includes(item.id)\r\n              )\r\n            )\r\n          }\r\n          break\r\n        case keyCode === PASTE_KEY && ctrl:\r\n          if (this.copiedWidgets) {\r\n            this.pasteWidget()\r\n          }\r\n          break\r\n        case keyCode === COPY_KEY && ctrl:\r\n          if (this.activeItems.length > 0) {\r\n            // const copiedWidgets = []\r\n            // const widgetRefs = this.mainPanelRef.$refs\r\n            // this.activeItemIds.forEach((itemId) => {\r\n            // const widgetRef = widgetRefs[itemId][0]\r\n            // copiedWidgets.push(getCopyData(widgetRef.item, widgetRef._self))\r\n            // })\r\n            const copiedWidgets = [...this.activeItems].map(item => {\r\n              item._copyFrom = 'command'\r\n              return item\r\n            })\r\n            this.copyWidget(copiedWidgets)\r\n          }\r\n          break\r\n        case keyCode === LAYER_PANEL_KEY && ctrl:\r\n          e.preventDefault()\r\n          this.setLayerPanel(!this.layerPanelOpened)\r\n          break\r\n        case keyCode === REFERENCE_LINE_KEY && ctrl:\r\n          e.preventDefault()\r\n          this.setReferenceLineVisible(!this.referenceLineOpened)\r\n          break\r\n        case keyCode === UNDO_KEY && ctrl && shift:\r\n          this.redo()\r\n          break\r\n        case keyCode === UNDO_KEY && ctrl:\r\n          this.undo()\r\n          break\r\n        case keyCode === BACKUP_KEY && ctrl:\r\n          e.preventDefault()\r\n          this.backupInvoker()\r\n          break\r\n        case keyCode === SELECT_ALL_KEY:\r\n          e.preventDefault()\r\n          this.replaceActiveItems(this.posterItems)\r\n          break\r\n        default:\r\n          break\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n::v-deep .title {\r\n  color: #2c2c2c;\r\n  background-color: #2c2c2c;\r\n}\r\n.backbutton {\r\n  color: white;\r\n  background: #2c2c2c;\r\n  height: 30px;\r\n  border: 0;\r\n  margin-top: 5px;\r\n  padding: 5px;\r\n}\r\n.backbutton:hover {\r\n  color: white;\r\n  background: #000000;\r\n  height: 35px;\r\n}\r\n.backbutton:focus {\r\n  color: white;\r\n  background: #000000;\r\n  height: 35px;\r\n}\r\n.head {\r\n  background: #2c2c2c;\r\n  min-height: 5%;\r\n}\r\n.poster-editor {\r\n  width: 100%;\r\n  min-width: 900px;\r\n  height: 96%;\r\n  background-color: #fff;\r\n  position: fixed;\r\n  &.init-loading {\r\n    filter: blur(6px);\r\n  }\r\n  .base {\r\n    width: 100%;\r\n    height: 100%;\r\n    position: relative;\r\n    display: flex;\r\n  }\r\n  .left-side {\r\n    height: 100%;\r\n  }\r\n  .poster-editor-main {\r\n    flex: 1;\r\n    height: 100%;\r\n    box-sizing: border-box;\r\n  }\r\n  .extend-side-bar {\r\n    width: 50px;\r\n    height: 100%;\r\n    border-left: 1px solid $colorBorder;\r\n  }\r\n  .poster-editor-control {\r\n    width: 200px;\r\n    height: 100%;\r\n    box-sizing: border-box;\r\n    border-left: 1px solid $colorBorder;\r\n  }\r\n}\r\n</style>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/views/posterEditor/index.vue b/src/views/posterEditor/index.vue
--- a/src/views/posterEditor/index.vue	(revision bffa5c3f7d4dc19821edf3827f03886fbbc32f26)
+++ b/src/views/posterEditor/index.vue	(date 1659643524991)
@@ -11,9 +11,9 @@
           原型名称
         </div>
         <div>
-<!--          <el-button style="padding: 5px; background: #2f2f2f; border: 0">-->
-<!--            <i class="el-icon-more" style="font-size: large; color: #ececec"></i>-->
-<!--          </el-button>-->
+          <!--          <el-button style="padding: 5px; background: #2f2f2f; border: 0">-->
+          <!--            <i class="el-icon-more" style="font-size: large; color: #ececec"></i>-->
+          <!--          </el-button>-->
         </div>
       </el-col>
     </el-row>
@@ -46,6 +46,7 @@
 import store from '@/store'
 import posterModule from '@/store/modules/poster/poster'
 import router from '@/router'
+import qs from "qs";
 
 const DELETE_KEY = 8 // delete
 const COPY_KEY = 67 // c
@@ -66,6 +67,10 @@
   },
   data() {
     return {
+      form_update: {
+        token: localStorage.getItem('Token'),
+        axure_id: localStorage.getItem('axure_id')
+      },
       initLoading: false
     }
   },
@@ -110,6 +115,7 @@
       background: 'rgba(255, 255, 255, 0.6)'
     })
     await this.resetState()
+    await this.updatePage()
     loading.close()
     this.initLoading = false
   },
@@ -130,7 +136,8 @@
       'copyWidget',
       'setLayerPanel',
       'setReferenceLineVisible',
-      'resetState'
+      'resetState',
+      'updatePageConfig'
     ]),
     ...mapActions({
       undo: 'history/undo',
@@ -142,6 +149,20 @@
     back() {
       router.push('/list/table-group-project')
     },
+    updatePage() {
+      this.$axios.post('/axure/getAxureInfo', qs.stringify(this.form_update))
+        .then(res => {
+          if (res.data.success) {
+            const pageConfig = {
+              pageConfigId: res.data.data.config_id,
+              config: res.data.data.config,
+              items: JSON.parse(res.data.data.items)
+            }
+            console.log(pageConfig)
+            this.updatePageConfig(pageConfig)
+          }
+        })
+    },
     keydownHandle(e) {
       if (e.target !== this.body) {
         return
Index: src/views/posterEditor/main/functionalBar/index.vue
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><template>\r\n  <div class=\"functional-bar\">\r\n    <ul>\r\n      <li class=\"github\">\r\n        <el-tooltip\r\n          effect=\"dark\"\r\n          content=\"希望大佬们能给我点颗星⭐\"\r\n          placement=\"bottom\"\r\n          transition=\"el-zoom-in-center\"\r\n        >\r\n          <span>\r\n            <a href=\"https://github.com/a7650/h5-editor\" target=\"blank\">GitHub</a>\r\n          </span>\r\n        </el-tooltip>\r\n      </li>\r\n      <li @click=\"savePage\">\r\n        <i class=\"el-icon-upload\"></i>\r\n        <span>\r\n          <el-badge is-dot :hidden=\"!isUnsavedState\">\r\n            {{ savePageLoading ? '正在保存' : '保存页面' }}\r\n          </el-badge>\r\n        </span>\r\n      </li>\r\n      <li @click=\"closeEditor\">\r\n        <i class=\"el-icon-circle-close\"></i>\r\n        <span>关闭编辑器</span>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapActions, mapState } from 'poster/poster.vuex'\r\nimport qs from 'qs'\r\nexport default {\r\n  data() {\r\n    return {\r\n      form_update: {\r\n        token: localStorage.getItem('Token'),\r\n        axure_id: localStorage.getItem('axure_id')\r\n      },\r\n      savePageLoading: false,\r\n      updatePageLoading: false\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapState(['isUnsavedState', 'posterItems'])\r\n  },\r\n  created() {\r\n    this.updatePage()\r\n  },\r\n  methods: {\r\n    ...mapActions(['saveActivityPageConfig', 'updatePageConfig']),\r\n    updatePage() {\r\n      this.$axios.post('/axure/getAxureInfo', qs.stringify(this.form_update))\r\n      .then(res => {\r\n        if (res.data.success) {\r\n          const pageConfig = {\r\n            pageConfigId: res.data.data.config_id,\r\n            config: res.data.data.config,\r\n            items: JSON.parse(res.data.data.items)\r\n          }\r\n          this.updatePageLoading = true\r\n          this.updatePageConfig(pageConfig)\r\n          this.updatePageLoading = false\r\n        }\r\n      })\r\n    },\r\n    closeEditor() {\r\n      this.$router.back()\r\n    },\r\n    savePage() {\r\n      if (this.savePageLoading) return\r\n      if (this.posterItems.length === 0) {\r\n        this.$message.error('当前画布中未添加任何元素，请添加后再提交')\r\n        return\r\n      }\r\n      this.savePageLoading = true\r\n      this.saveActivityPageConfig().finally(() => {\r\n        this.savePageLoading = false\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n.functional-bar {\r\n  background-color: #1d2024;\r\n  border-radius: 2px;\r\n  position: absolute;\r\n  top: 26px;\r\n  right: 4px;\r\n  padding: 0 10px;\r\n  box-shadow: 0 0 6px rgba($color: #000000, $alpha: 0.2);\r\n  z-index: 999;\r\n  height: 24px;\r\n  ul {\r\n    /* padding: 2px 0; */\r\n    /* height: 22px; */\r\n    height: 100%;\r\n  }\r\n  li {\r\n    user-select: none;\r\n    cursor: pointer;\r\n    height: 100%;\r\n    color: #9099a4;\r\n    float: left;\r\n    display: flex;\r\n    align-items: center;\r\n    transition: 0.2s;\r\n    font-size: 14px;\r\n    &:hover {\r\n      color: #fff;\r\n    }\r\n    &:not(:first-child) {\r\n      margin-left: 14px;\r\n    }\r\n    i {\r\n      font-size: 16px;\r\n      padding-right: 2px;\r\n    }\r\n    span {\r\n      font-size: 14px;\r\n    }\r\n  }\r\n  .github{\r\n    color: #fff;\r\n  }\r\n}\r\n</style>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/views/posterEditor/main/functionalBar/index.vue b/src/views/posterEditor/main/functionalBar/index.vue
--- a/src/views/posterEditor/main/functionalBar/index.vue	(revision bffa5c3f7d4dc19821edf3827f03886fbbc32f26)
+++ b/src/views/posterEditor/main/functionalBar/index.vue	(date 1659643713761)
@@ -31,14 +31,9 @@
 
 <script>
 import { mapActions, mapState } from 'poster/poster.vuex'
-import qs from 'qs'
 export default {
   data() {
     return {
-      form_update: {
-        token: localStorage.getItem('Token'),
-        axure_id: localStorage.getItem('axure_id')
-      },
       savePageLoading: false,
       updatePageLoading: false
     }
@@ -46,26 +41,8 @@
   computed: {
     ...mapState(['isUnsavedState', 'posterItems'])
   },
-  created() {
-    this.updatePage()
-  },
   methods: {
-    ...mapActions(['saveActivityPageConfig', 'updatePageConfig']),
-    updatePage() {
-      this.$axios.post('/axure/getAxureInfo', qs.stringify(this.form_update))
-      .then(res => {
-        if (res.data.success) {
-          const pageConfig = {
-            pageConfigId: res.data.data.config_id,
-            config: res.data.data.config,
-            items: JSON.parse(res.data.data.items)
-          }
-          this.updatePageLoading = true
-          this.updatePageConfig(pageConfig)
-          this.updatePageLoading = false
-        }
-      })
-    },
+    ...mapActions(['saveActivityPageConfig']),
     closeEditor() {
       this.$router.back()
     },
Index: src/views/posterEditor/main/ruler/matchedLine.vue
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><template>\r\n  <div v-if=\"matchedLine\" class=\"matched-line\">\r\n    <div\r\n      v-for=\"(item, index) in matchedLine.col\"\r\n      :key=\"'col' + index\"\r\n      class=\"reference-line column\"\r\n      :style=\"{ left: item + 'px' }\"\r\n    />\r\n    <div\r\n      v-for=\"(item, index) in matchedLine.row\"\r\n      :key=\"'row' + index\"\r\n      class=\"reference-line row\"\r\n      :style=\"{ top: item + 'px',...rowElPositionFix }\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapState } from 'poster/poster.vuex'\r\nexport default {\r\n  props: {\r\n    rowElPositionFix: {\r\n      type: Object,\r\n      default: null\r\n    }\r\n  },\r\n  data() {\r\n    return {}\r\n  },\r\n  computed: {\r\n    ...mapState(['matchedLine'])\r\n  },\r\n  methods: {}\r\n}\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n.reference-line {\r\n  /* background-color: #ff0000; */\r\n  position: absolute;\r\n  z-index: 99;\r\n  &.column {\r\n    width: 0px;\r\n    border-left: 1px dashed #ff0000;\r\n    height: 5000px;\r\n    /* margin-left: -2px; */\r\n    top: 0;\r\n    /* background: linear-gradient(\r\n      90deg,\r\n      transparent 33.3%,\r\n      #eceef0 0,\r\n      #ff0000 66.6%,\r\n      transparent 0\r\n    ); */\r\n    .tip {\r\n      top: 30px;\r\n      left: 10px;\r\n    }\r\n  }\r\n  &.row {\r\n    width: 5000px;\r\n    height: 0px;\r\n    /* margin-top: -2px; */\r\n    left: 0;\r\n    border-top: 1px dashed #ff0000;\r\n    /* background: linear-gradient(\r\n      0deg,\r\n      transparent 33.3%,\r\n      #eceef0 0,\r\n      #ff0000 66.6%,\r\n      transparent 0\r\n    ); */\r\n    .tip {\r\n      top: -30px;\r\n      left: 30px;\r\n    }\r\n  }\r\n}\r\n</style>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/views/posterEditor/main/ruler/matchedLine.vue b/src/views/posterEditor/main/ruler/matchedLine.vue
--- a/src/views/posterEditor/main/ruler/matchedLine.vue	(revision bffa5c3f7d4dc19821edf3827f03886fbbc32f26)
+++ b/src/views/posterEditor/main/ruler/matchedLine.vue	(date 1659643318655)
@@ -5,13 +5,13 @@
       :key="'col' + index"
       class="reference-line column"
       :style="{ left: item + 'px' }"
-    />
+    ></div>
     <div
       v-for="(item, index) in matchedLine.row"
       :key="'row' + index"
       class="reference-line row"
       :style="{ top: item + 'px',...rowElPositionFix }"
-    />
+    ></div>
   </div>
 </template>
 
Index: src/views/list/table-group-project.vue
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><template>\r\n  <div class=\"main-container\">\r\n    <TableHeader :can-collapsed=\"false\">\r\n      <template slot=\"left\">\r\n        <el-button\r\n          slot=\"reference\"\r\n          class=\"back-button\"\r\n          float=\"left\"\r\n          @click=\"toProject()\"\r\n        >\r\n          <i class=\"el-icon-back\"></i>\r\n        </el-button>\r\n        <div style=\"float: right\">\r\n          <div id=\"projectName\" class=\"projecttitle\">\r\n            {{ project_name }}\r\n          </div>\r\n          <div id=\"teamName\" class=\"teamtitle\">\r\n            该项目属于团队{{ team_name }}\r\n          </div>\r\n        </div>\r\n      </template>\r\n\r\n      <template slot=\"right\">\r\n        <el-popover\r\n          v-model=\"visible\"\r\n          placement=\"top\"\r\n          width=\"350\"\r\n        >\r\n          <el-button\r\n            slot=\"reference\"\r\n            class=\"button-style\"\r\n            style=\"border-color: #57b1ff\"\r\n            @click=\"dialogWordVisible = true\"\r\n          >创建文档\r\n            <i class=\"el-icon-plus\"></i>\r\n          </el-button>\r\n        </el-popover>\r\n\r\n        <el-popover\r\n          v-model=\"visible\"\r\n          placement=\"top\"\r\n          width=\"350\"\r\n          trigger=\"click\"\r\n        >\r\n          <el-button\r\n            slot=\"reference\"\r\n            class=\"button-style\"\r\n            style=\"border-color: #a15aff\"\r\n            @click=\"dialogPageVisible = true\"\r\n          >创建原型\r\n            <i class=\"el-icon-plus\"></i>\r\n          </el-button>\r\n        </el-popover>\r\n\r\n        <el-popover\r\n          v-model=\"visible\"\r\n          placement=\"top\"\r\n          width=\"350\"\r\n        >\r\n          <el-button\r\n            slot=\"reference\"\r\n            class=\"button-style\"\r\n            @click=\"createUML()\"\r\n            style=\"border-color: #ffd45c\"\r\n          >创建uml\r\n            <i class=\"el-icon-plus\"></i>\r\n          </el-button>\r\n        </el-popover>\r\n\r\n        <el-popover\r\n          v-model=\"visible\"\r\n          placement=\"top\"\r\n          width=\"350\"\r\n        >\r\n          <el-button\r\n            slot=\"reference\"\r\n            class=\"button-style\"\r\n          ><el-dropdown trigger=\"click\" @command=\"onCommad\">\r\n            <div class=\"action-wrapper\" style=\"font-size: 16px ;font-weight: bold\">\r\n              <i class=\"el-icon-setting\"></i>\r\n              设置\r\n            </div>\r\n            <el-dropdown-menu slot=\"dropdown\">\r\n              <el-dropdown-item icon=\"el-icon-edit-outline\" command=\"personalCenter\">\r\n                <el-button type=\"text\" @click=\"dialogUpdateProjectVisible = true\">重命名</el-button>\r\n              </el-dropdown-item>\r\n              <el-dropdown-item icon=\"el-icon-switch-button\" command=\"logout\">\r\n                <el-button type=\"text\" style=\"color: red\" @click=\"deleteProject\">删除项目</el-button>\r\n              </el-dropdown-item>\r\n            </el-dropdown-menu>\r\n          </el-dropdown>\r\n          </el-button>\r\n        </el-popover>\r\n      </template>\r\n    </TableHeader>\r\n    <el-dialog title=\"创建文档\" :visible.sync=\"dialogWordVisible\">\r\n      <el-form :model=\"form_word\">\r\n        <el-form-item label=\"文档名称\" :label-width=\"formLabelWidth\">\r\n          <el-input v-model=\"form_word.doc_name\" autocomplete=\"off\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"文档简介（可不填）\" :label-width=\"formLabelWidth\">\r\n          <el-input v-model=\"form_word.doc_description\" autocomplete=\"off\" />\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"dialogWordVisible = false; form_word.doc_name = '' \">取 消</el-button>\r\n        <el-button @click=\"dialogWordVisible = false; createWord()\">确 定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n\r\n    <el-dialog title=\"创建原型\" :visible.sync=\"dialogPageVisible\">\r\n      <el-form :model=\"form_page\">\r\n        <el-form-item label=\"原型名称\" :label-width=\"formLabelWidth\">\r\n          <el-input v-model=\"form_createAxure.axure_name\" autocomplete=\"off\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"原型简介（可不填）\" :label-width=\"formLabelWidth\">\r\n          <el-input v-model=\"form_createAxure.axure_info\" autocomplete=\"off\" />\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"dialogPageVisible = false; form_page.page_name = '' \">取 消</el-button>\r\n        <el-button @click=\"createAxure(), dialogPageVisible = false\">确 定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n\r\n    <el-dialog title=\"修改项目信息\" :visible.sync=\"dialogUpdateProjectVisible\">\r\n      <el-form :model=\"form_project\">\r\n        <el-form-item label=\"项目新名称\" :label-width=\"formLabelWidth\">\r\n          <el-input v-model=\"form_updateProject.project_name\" autocomplete=\"off\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"项目新简介（可不填）\" :label-width=\"formLabelWidth\">\r\n          <el-input v-model=\"form_updateProject.project_info\" autocomplete=\"off\" />\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"dialogUpdateProjectVisible = false; form_updateProject.project_name = '' \">取 消</el-button>\r\n        <el-button @click=\"updateProject(), dialogUpdateProjectVisible = false\">确 定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n\r\n    <el-dialog title=\"修改文档信息\" :visible.sync=\"dialogUpdateDocInfoVisible\">\r\n      <el-form :model=\"form_updateDocInfo\">\r\n        <el-form-item label=\"文档新名称\" :label-width=\"formLabelWidth\">\r\n          <el-input v-model=\"form_updateDocInfo.doc_name\" autocomplete=\"off\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"文档新简介（可不填）\" :label-width=\"formLabelWidth\">\r\n          <el-input v-model=\"form_updateDocInfo.doc_description\" autocomplete=\"off\" />\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"dialogUpdateDocInfoVisible = false\">取 消</el-button>\r\n        <el-button @click=\"updateDocInfo(), dialogUpdateDocInfoVisible = false\">确 定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n    <TableBody ref=\"tableBody\" class=\"temptablebody\">\r\n      <template>\r\n        <el-tabs :tab-position=\"top\" style=\"height: 200px;\" class=\"messagecss\">\r\n          <el-tab-pane>\r\n            <span slot=\"label\" class=\"fontClass\" style=\"font-size: large; color: #2c2c2c\">文档</span>\r\n            <el-table\r\n              ref=\"table\"\r\n              v-loading=\"tableloading\"\r\n              class=\"table-custom\"\r\n              :data=\"docList\"\r\n              :header-cell-style=\"tableConfig.headerCellStyle\"\r\n              :cell-style=\"tableConfig.cellStyle\"\r\n              :size=\"tableConfig.size\"\r\n              @selection-change=\"handleSelectionChange\"\r\n              @row-dblclick=\"toDocEditor\"\r\n            >\r\n              <el-table-column\r\n                type=\"selection\"\r\n                width=\"45\"\r\n              />\r\n              <el-table-column\r\n                align=\"center\"\r\n                label=\"名称\"\r\n                prop=\"doc_name\"\r\n                width=\"250px\"\r\n              />\r\n              <el-table-column\r\n                align=\"center\"\r\n                label=\"更新时间\"\r\n                prop=\"last_edit_time\"\r\n                width=\"250px\"\r\n              />\r\n              <el-table-column\r\n                align=\"center\"\r\n                label=\"创建者\"\r\n                prop=\"creator_name\"\r\n                width=\"200px\"\r\n              />\r\n              <el-table-column\r\n                align=\"center\"\r\n                label=\"操作\"\r\n                width=\"200\"\r\n              >\r\n                <template slot-scope=\"scope\">\r\n                  <el-dropdown trigger=\"click\" @command=\"onCommad\">\r\n                    <div class=\"action-wrapper\">\r\n                      <span class=\"nick-name el-dropdown-link\">\r\n                        <i class=\"el-icon-more\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <el-dropdown-menu slot=\"dropdown\">\r\n                      <el-dropdown-item icon=\"el-icon-edit-outline\" command=\"personalCenter\">\r\n                        <el-button type=\"text\" @click=\"form_updateDocInfo.doc_id = scope.row.doc_id, dialogUpdateDocInfoVisible = true\">重命名</el-button>\r\n                      </el-dropdown-item>\r\n                      <el-dropdown-item icon=\"el-icon-switch-button\" command=\"logout\">\r\n                        <el-button type=\"text\" @click=\"form_deleteDoc.doc_id = scope.row.doc_id, deleteDoc()\">删除文件</el-button>\r\n                      </el-dropdown-item>\r\n                    </el-dropdown-menu>\r\n                  </el-dropdown>\r\n                </template>\r\n              </el-table-column>\r\n            </el-table>\r\n          </el-tab-pane>\r\n          <el-tab-pane>\r\n            <span slot=\"label\" class=\"fontClass\" style=\"font-size: large; color: #2c2c2c\">原型</span>\r\n            <el-table\r\n              ref=\"table\"\r\n              v-loading=\"loading\"\r\n              class=\"table-custom\"\r\n              :data=\"axureList\"\r\n              :header-cell-style=\"tableConfig.headerCellStyle\"\r\n              :size=\"tableConfig.size\"\r\n              @selection-change=\"handleSelectionChange\"\r\n              @row-dblclick=\"toAxureEditor\"\r\n            >\r\n              <el-table-column\r\n                type=\"selection\"\r\n                width=\"45\"\r\n              />\r\n              <el-table-column\r\n                align=\"center\"\r\n                label=\"名称\"\r\n                prop=\"axure_name\"\r\n                width=\"250px\"\r\n              />\r\n              <el-table-column\r\n                align=\"center\"\r\n                label=\"更新时间\"\r\n                prop=\"updatetime\"\r\n                width=\"250px\"\r\n              />\r\n              <el-table-column\r\n                align=\"center\"\r\n                label=\"创建者\"\r\n                prop=\"user\"\r\n                width=\"200px\"\r\n              />\r\n              <el-table-column\r\n                align=\"center\"\r\n                label=\"操作\"\r\n                width=\"200\"\r\n              >\r\n                <template slot-scope=\"scope\">\r\n                  <el-dropdown trigger=\"click\" @command=\"onCommad\">\r\n                    <div class=\"action-wrapper\">\r\n                      <span class=\"nick-name el-dropdown-link\">\r\n                        <i class=\"el-icon-more\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <el-dropdown-menu slot=\"dropdown\">\r\n                      <el-dropdown-item icon=\"el-icon-edit-outline\" command=\"personalCenter\">\r\n                        <el-button type=\"text\" @click=\"form_updateDocInfo.doc_id = scope.row.doc_id, dialogUpdateDocInfoVisible = true\">重命名</el-button>\r\n                      </el-dropdown-item>\r\n                      <el-dropdown-item icon=\"el-icon-switch-button\" command=\"logout\">\r\n                        <el-button type=\"text\">删除文件</el-button>\r\n                      </el-dropdown-item>\r\n                    </el-dropdown-menu>\r\n                  </el-dropdown>\r\n                </template>\r\n              </el-table-column>\r\n            </el-table>\r\n          </el-tab-pane>\r\n        </el-tabs>\r\n      </template>\r\n    </TableBody>\r\n    <TableBody ref=\"tableBody\" class=\"rightside\">\r\n      <template>\r\n        <div class=\"rightsidefont\">\r\n          About\r\n        </div>\r\n        <el-divider />\r\n        <div>\r\n          <span>{{ project_info }}</span>\r\n          <el-divider />\r\n        </div>\r\n      </template>\r\n    </TableBody>\r\n\r\n    <!--    <TableFooter-->\r\n    <!--      :page-size=\"pageModel.pageSize\"-->\r\n    <!--      :total-size=\"pageModel.totalSize\"-->\r\n    <!--      @pageSizeChanged=\"pageSizeChanged\"-->\r\n    <!--      @currentChanged=\"currentChanged\"-->\r\n    <!--      @onRefresh=\"doRefresh\"-->\r\n    <!--    />-->\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport TableMixin, { PageModelMixin } from '@/mixins/TableMixin'\r\nimport {\r\n  GetDataMixin,\r\n  AddItemMixin,\r\n  DeleteItemsMixin,\r\n  UpdateItemMixin,\r\n  RefreshActionMixin\r\n} from '@/mixins/ActionMixin'\r\nimport SingleUpload from '@/components/common/SingleUpload.vue'\r\nimport BaseForm from '@/components/common/BaseForm.vue'\r\nimport draggable from '@/directive/draggable'\r\nimport store from '@/layouts/store'\r\nimport qs from 'qs'\r\nimport { mapActions, mapState } from 'poster/poster.vuex'\r\nimport { getters } from '@/store/modules/user.js'\r\nimport { state } from '@/store/modules/user.js'\r\nimport router from '@/router'\r\nexport default {\r\n  name: 'TableGroupMember',\r\n  // eslint-disable-next-line vue/no-unused-components\r\n  components: { SingleUpload, BaseForm },\r\n  directives: { draggable },\r\n  mixins: [\r\n    TableMixin,\r\n    PageModelMixin,\r\n    GetDataMixin,\r\n    AddItemMixin,\r\n    DeleteItemsMixin,\r\n    UpdateItemMixin,\r\n    RefreshActionMixin\r\n  ],\r\n  data() {\r\n    return {\r\n      visible_setPerm: true,\r\n      loading: false,\r\n      form_createAxure: {\r\n        token: getters.getToken(state),\r\n        axure_name: null,\r\n        axure_info: null,\r\n        project_id: localStorage.getItem('project_id')\r\n      },\r\n      form_getAxureList: {\r\n        token: getters.getToken(state),\r\n        project_id: localStorage.getItem('project_id')\r\n      },\r\n      form_deleteDoc: {\r\n        token: getters.getToken(state),\r\n        doc_id: null\r\n      },\r\n      form_updateDocInfo: {\r\n        token: getters.getToken(state),\r\n        doc_id: null,\r\n        doc_name: null,\r\n        doc_description: null\r\n      },\r\n      form_deleteProject: {\r\n        token: getters.getToken(state),\r\n        user_id: getters.getUserId(state),\r\n        project_id: localStorage.getItem('project_id')\r\n      },\r\n      form_updateProject: {\r\n        token: getters.getToken(state),\r\n        user_id: getters.getUserId(state),\r\n        project_id: localStorage.getItem('project_id'),\r\n        project_name: '',\r\n        project_info: ''\r\n      },\r\n      form_member: {\r\n        token: getters.getToken(state),\r\n        username: getters.getUserName(state),\r\n        user_id: getters.getUserId(state),\r\n        team_id: Number(localStorage.getItem('team_id'))\r\n      },\r\n      project_info: localStorage.getItem('project_info'),\r\n      visible: false,\r\n      form_word: {\r\n        token: getters.getToken(state),\r\n        project_id: localStorage.getItem('project_id'),\r\n        doc_name: '',\r\n        doc_description: ''\r\n      },\r\n      form_page: {\r\n        token: getters.getToken(state),\r\n        username: getters.getUserName(state),\r\n        page_name: '',\r\n        team_id: Number(localStorage.getItem('team_id'))\r\n      },\r\n      form_getDocInfo: {\r\n        token: getters.getToken(state),\r\n        doc_id: localStorage.getItem('doc_id')\r\n      },\r\n      form_deleteMember: {\r\n        token: getters.getToken(state),\r\n        username: getters.getUserName(state),\r\n        user_id: getters.getUserId(state),\r\n        team_id: Number(localStorage.getItem('team_id')),\r\n        deleted_id: null\r\n      },\r\n      form_quitTeam: {\r\n        token: getters.getToken(state),\r\n        username: getters.getUserName(state),\r\n        user_id: getters.getUserId(state),\r\n        team_id: Number(localStorage.getItem('team_id'))\r\n      },\r\n      form_setPerm: {\r\n        token: getters.getToken(state),\r\n        username: getters.getUserName(state),\r\n        user_id: getters.getUserId(state),\r\n        team_id: Number(localStorage.getItem('team_id')),\r\n        member_id: 0,\r\n        perm: null\r\n      },\r\n      project_name: localStorage.getItem('project_name'),\r\n      team_name: localStorage.getItem('team_name'),\r\n      dialogWordVisible: false,\r\n      dialogPageVisible: false,\r\n      dialogMethodVisible: false,\r\n      dialogUpdateProjectVisible: false,\r\n      dialogUpdateDocInfoVisible: false,\r\n      axureList: [],\r\n      deleteMemberList: [],\r\n      docList: [],\r\n      powerOptions: [\r\n        {\r\n          value: 1,\r\n          label: '队长'\r\n        },\r\n        {\r\n          value: 2,\r\n          label: '开发者'\r\n        },\r\n        {\r\n          value: 3,\r\n          label: '观察者'\r\n        }\r\n      ],\r\n      userModel: {\r\n        address: '',\r\n        avatar: '',\r\n        gender: 1,\r\n        id: 1,\r\n        lastLoginIp: '',\r\n        lastLoginTime: '',\r\n        nickName: '',\r\n        status: 0,\r\n        vip: 1\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    this.getDocList()\r\n    this.getAxureList()\r\n    localStorage.setItem('flag', 'user')\r\n    localStorage.setItem('enable', 'true')\r\n  },\r\n  methods: {\r\n    toAxureEditor(val) {\r\n      localStorage.setItem('axure_id', val.axure_id)\r\n      localStorage.setItem('axure_name', val.axure_name)\r\n      localStorage.setItem('axure_info', val.axure_info)\r\n      localStorage.setItem('Token', getters.getToken(state))\r\n      this.$router.push('/posterEditor')\r\n    },\r\n    createAxure() {\r\n      this.$axios.post('/axure/create', qs.stringify(this.form_createAxure))\r\n         .then((res) => {\r\n           if (res.data.success) {\r\n             this.$message.success(res.data.message)\r\n             this.getAxureList()\r\n           } else {\r\n             this.$message.error(res.data.message)\r\n           }\r\n         })\r\n    },\r\n    getAxureList() {\r\n      this.loading = true\r\n      this.axureList = []\r\n      this.$axios.post('/axure/getAxureList', qs.stringify(this.form_getAxureList))\r\n        .then((res) => {\r\n          if (res.data.success) {\r\n            for (let i = 0; i < res.data.data.length; i++) {\r\n              const axures = {\r\n                axure_info: null,\r\n                axure_id: null,\r\n                project_id: null,\r\n                axure_name: null,\r\n                title: null,\r\n                config: null,\r\n                items: null\r\n              }\r\n              axures.axure_info = res.data.data[i].axure_info\r\n              axures.axure_id = res.data.data[i].axure_id\r\n              axures.project_id = res.data.data[i].project_id\r\n              axures.axure_name = res.data.data[i].axure_name\r\n              axures.title = res.data.data[i].title\r\n              axures.config = res.data.data[i].config\r\n              axures.items = res.data.data[i].items\r\n              let flag = 0\r\n              for (let i = 0; i < this.axureList.length; i++) {\r\n                if (this.axureList[i].axure_id === axures.axure_id) {\r\n                  flag = 1\r\n                  break\r\n                }\r\n              }\r\n              if (!flag) { this.axureList.push(axures) }\r\n              // this.$message.success(res.data.message)\r\n            }\r\n          } else {\r\n             this.$message.error(res.data.message)\r\n          }\r\n           this.loading = false\r\n         })\r\n    },\r\n    toDocEditor(val) {\r\n      localStorage.setItem('doc_id', val.doc_id)\r\n      localStorage.setItem('doc_name', val.doc_name)\r\n      this.$axios.get('/doc/getDocInfo', {\r\n        params: {\r\n          token: getters.getToken(state),\r\n          doc_id: localStorage.getItem('doc_id')\r\n        }\r\n      })\r\n      .then(res => {\r\n        if (res.data.success) {\r\n          localStorage.setItem('doc_content', res.data.data.doc_content)\r\n        } else {\r\n          this.$message.error(res.data.message)\r\n        }\r\n      })\r\n      this.$router.push('/editor/rich-text')\r\n    },\r\n    deleteDoc() {\r\n      this.$confirm('此操作将使您删除此文档' + ', 是否继续?', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n    }).then(() => {\r\n      this.$axios.post('/doc/deleteDoc', qs.stringify(this.form_deleteDoc))\r\n        .then((res) => {\r\n          // console.log(5)\r\n          if (res.data.success) {\r\n            this.$message.success(res.data.message)\r\n            this.getDocList()\r\n          } else {\r\n            this.$message.error(res.data.message)\r\n          }\r\n        })\r\n      }).catch(() => {\r\n        this.$message({\r\n          type: 'info',\r\n          message: '已取消操作'\r\n        })\r\n      })\r\n    },\r\n    updateDocInfo() {\r\n      this.$axios.post('/doc/updateDocInfo', qs.stringify(this.form_updateDocInfo))\r\n        .then((res) => {\r\n          // console.log(5)\r\n          if (res.data.success) {\r\n            this.$message.success(res.data.message)\r\n            this.getDocList()\r\n          } else {\r\n            this.$message.error(res.data.message)\r\n          }\r\n        })\r\n    },\r\n    deleteProject() {\r\n      this.$confirm('此操作将使您删除此项目' + ', 是否继续?', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n    }).then(() => {\r\n      this.$axios.post('/project/delete', qs.stringify(this.form_deleteProject))\r\n        .then((res) => {\r\n          // console.log(5)\r\n          if (res.data.success) {\r\n            this.$message.success(res.data.message)\r\n            this.toProject()\r\n          } else {\r\n            this.$message.error(res.data.message)\r\n          }\r\n        })\r\n      }).catch(() => {\r\n        this.$message({\r\n          type: 'info',\r\n          message: '已取消操作'\r\n        })\r\n      })\r\n    },\r\n    updateProject() {\r\n      // this.form_updateProject.project_id = item.project_id\r\n      this.$axios.post('/project/update', qs.stringify(this.form_updateProject))\r\n        .then((res) => {\r\n          // console.log(5)\r\n          if (res.data.success) {\r\n            this.$message.success(res.data.message)\r\n            this.project_name = this.form_updateProject.project_name\r\n            this.project_info = this.form_updateProject.project_info\r\n          } else {\r\n            this.$message.error(res.data.message)\r\n          }\r\n        })\r\n    },\r\n    getDocList() {\r\n      this.docList = []\r\n      this.$axios.get('/doc/getDocList', {\r\n              params: {\r\n                token: getters.getToken(state),\r\n                project_id: localStorage.getItem('project_id')\r\n              }\r\n            })\r\n            .then(res => {\r\n              if (res.data.success) {\r\n                for (let i = 0; i < res.data.data.length; i++) {\r\n              const docs = {\r\n                doc_name: null,\r\n                last_edit_time: null,\r\n                project_id: null,\r\n                doc_description: null,\r\n                creator_id: null,\r\n                doc_content: null,\r\n                creator_name: null,\r\n                doc_id: null\r\n              }\r\n              docs.doc_name = res.data.data[i].doc_name\r\n              docs.last_edit_time = res.data.data[i].last_edit_time\r\n              docs.project_id = res.data.data[i].project_id\r\n              docs.doc_description = res.data.data[i].doc_description\r\n              docs.creator_id = res.data.data[i].creator_id\r\n              docs.doc_content = res.data.data[i].doc_content\r\n              docs.creator_name = res.data.data[i].creator_name\r\n              docs.doc_id = res.data.data[i].doc_id\r\n              let flag = 0\r\n              for (let i = 0; i < this.docList.length; i++) {\r\n                if (this.docList[i].doc_id === docs.doc_id) {\r\n                  flag = 1\r\n                  break\r\n                }\r\n              }\r\n              if (!flag) { this.docList.push(docs) }\r\n              // this.$message.success(res.data.message)\r\n            }\r\n              } else {\r\n                this.$message.error(res.data.message)\r\n              }\r\n            })\r\n    },\r\n    createUML() {\r\n      router.push('/drawio')\r\n    },\r\n    CreatePage() {\r\n      this.$message.error('还没写接口哪！')\r\n    },\r\n    setPerm(item) {\r\n      this.form_setPerm.member_id = item.id\r\n      this.$axios.post('/team/set_perm', qs.stringify(this.form_setPerm))\r\n        .then((res) => {\r\n          // console.log(5)\r\n          if (res.data.result === 7) {\r\n            this.$message.success(res.data.message)\r\n          } else {\r\n            this.$message.error(res.data.message)\r\n          }\r\n          this.getMemberList()\r\n        })\r\n    },\r\n    deleteItem(item) {\r\n      if (item.id === this.form_deleteMember.user_id) {\r\n        this.$confirm('此操作将使您退出此团队' + ', 是否继续?', '提示', {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n      }).then(() => {\r\n        this.quitTeam()\r\n        }).catch(() => {\r\n          this.$message({\r\n            type: 'info',\r\n            message: '已取消操作'\r\n          })\r\n        })\r\n      } else {\r\n        this.$confirm('此操作将踢出用户成员' + item.username + ', 是否继续?', '提示', {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n      }).then(() => {\r\n        this.deleteMember(item)\r\n        }).catch(() => {\r\n          this.$message({\r\n            type: 'info',\r\n            message: '已取消操作'\r\n          })\r\n        })\r\n      }\r\n    },\r\n    handleSelectionChange(items) {\r\n      this.deleteMemberList = items\r\n    },\r\n    deleteMultiItem() {\r\n      this.$confirm('此操作将踢出您选中的所有成员, 是否继续?', '提示', {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n      }).then(() => {\r\n        for (let i = 0; i < this.deleteMemberList.length; i++) {\r\n          this.deleteMember(this.deleteMemberList[i])\r\n        }\r\n        this.getMemberList()\r\n        }).catch(() => {\r\n          this.$message({\r\n            type: 'info',\r\n            message: '已取消踢出'\r\n          })\r\n        })\r\n    },\r\n    deleteMember(item) {\r\n      this.form_deleteMember.deleted_id = item.id\r\n      // console.log(item.id)\r\n      this.$axios.post('/team/delete_member', qs.stringify(this.form_deleteMember))\r\n        .then((res) => {\r\n          // console.log(5)\r\n          if (res.data.result === 5) {\r\n            this.$message.success(res.data.message)\r\n          } else {\r\n            this.$message.error(res.data.message)\r\n          }\r\n          this.getMemberList()\r\n        })\r\n    },\r\n    quitTeam() {\r\n      this.$axios.post('/team/quit_team', qs.stringify(this.form_quitTeam))\r\n        .then((res) => {\r\n          if (res.data.result === 5) {\r\n            this.$message.success(res.data.message)\r\n          } else {\r\n            this.$message.error(res.data.message)\r\n          }\r\n          this.onGroupSpace()\r\n        })\r\n    },\r\n    onGroupSpace() {\r\n      store.toGroupSpace && store.toGroupSpace()\r\n    },\r\n    clearList() {\r\n      this.memberList = []\r\n    },\r\n    onFile() {\r\n      this.$router.push('/list/table-group-file')\r\n    },\r\n    toProject() {\r\n      this.$router.replace('/list/table-group-message')\r\n    },\r\n    createWord() {\r\n      this.$axios.post('/doc/newDoc', qs.stringify(this.form_word))\r\n         .then((res) => {\r\n           if (res.data.success) {\r\n             this.$message.success(res.data.message)\r\n             this.getDocList()\r\n           } else {\r\n             this.$message.error(res.data.message)\r\n           }\r\n         })\r\n    },\r\n    onRichTextEditor() {\r\n      store.toRichTextEditor && store.toRichTextEditor()\r\n    },\r\n    onChooseTemplate() {\r\n      store.toChooseTemplate && store.toChooseTemplate()\r\n    },\r\n    onSingleSuccess({ res }) {\r\n      if (res.status !== 200) {\r\n        this.$errorMsg(res.msg)\r\n      } else {\r\n        this.userModel = res.obj\r\n      }\r\n    },\r\n    beforeUpload(file) {\r\n      const size = file.size\r\n      if (size / 1024 > 500) {\r\n        this.$errorMsg('上传文件最大不能超过500K')\r\n        return false\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.button-style {\r\n  margin: 10px;\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  border-width: 3px;\r\n  color: black;\r\n  height: 45px;\r\n}\r\n.back-button{\r\n  margin-top: 20px;\r\n  font-size: 26px;\r\n  font-weight: bold;\r\n  color: black;\r\n  padding: 5px;\r\n  border: 0;\r\n}\r\n.spcbutton-style {\r\n  margin: 20px;\r\n  font-size: 14px;\r\n  font-weight: bold;\r\n  color: black;\r\n  height: 35px;\r\n}\r\n.projecttitle {\r\n  font-size: 45px;\r\n  margin-left: 10px;\r\n  margin-top: 10px;\r\n  margin-bottom: 20px;\r\n  float:left;\r\n}\r\n.teamtitle {\r\n  margin-top: 30px;\r\n  margin-left: 20px;\r\n  font-family: 黑体;\r\n  font-size: 18px;\r\n  color: #777777;\r\n  float:right;\r\n  white-space: nowrap;\r\n}\r\n.temptablebody{\r\n  height: 500px;\r\n  width: 75%;\r\n  float: left;\r\n}\r\n.messagecss{\r\n  width: 947px;\r\n  margin: 10px;\r\n}\r\n.rightside{\r\n  float: right;\r\n  width: 23%;\r\n  margin: 10px;\r\n  height: 500px;\r\n}\r\n.rightsidefont{\r\n  font-size: 25px;\r\n  margin: 10px;\r\n}\r\n</style>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/views/list/table-group-project.vue b/src/views/list/table-group-project.vue
--- a/src/views/list/table-group-project.vue	(revision bffa5c3f7d4dc19821edf3827f03886fbbc32f26)
+++ b/src/views/list/table-group-project.vue	(date 1659643318648)
@@ -314,7 +314,7 @@
 import draggable from '@/directive/draggable'
 import store from '@/layouts/store'
 import qs from 'qs'
-import { mapActions, mapState } from 'poster/poster.vuex'
+// import { mapActions, mapState } from 'poster/poster.vuex'
 import { getters } from '@/store/modules/user.js'
 import { state } from '@/store/modules/user.js'
 import router from '@/router'
