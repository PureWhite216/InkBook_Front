Index: src/store/modules/poster/poster.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import * as MTS from './poster.mutations'\r\n// import { Message } from 'element-ui'\r\nimport { Widget, BackgroundWidget, CopiedWidget } from 'poster/widgetConstructor'\r\nimport { arrMoveTop, arrMoveUpper, arrMoveLower, arrMoveBottom } from 'poster/utils'\r\nimport { isPlainObject } from '@/utils'\r\nimport _set from 'lodash/set'\r\nimport { changeCompositionPositionHandler } from './helpers'\r\nimport history from './history'\r\nimport backup from './backup'\r\n// import { addActivityPageConfig } from '@/api/activity'\r\nimport { Message } from 'element-ui'\r\nimport qs from 'qs'\r\nimport axios from 'axios'\r\n\r\nfunction getState() {\r\n    const state = {\r\n        activityId: '',\r\n        pageConfigId: '',\r\n        pageTitle: '',\r\n        canvasSize: {\r\n            width: 338,\r\n            height: 600\r\n        },\r\n        canvasPosition: {\r\n            top: null,\r\n            left: null\r\n        },\r\n        background: null,\r\n        posterItems: [], // 组件列表\r\n        activeItems: [], // 当前选中的组件\r\n        assistWidgets: [], // 辅助组件\r\n        layerPanelOpened: true, // 是否打开图层面板\r\n        referenceLineOpened: true, // 是否打开参考线\r\n        copiedWidgets: null, // 当前复制的组件 WidgetItem[]\r\n        referenceLine: { // 参考线,用户定义的参考线\r\n            row: [],\r\n            col: []\r\n        },\r\n        matchedLine: null, // 匹配到的参考线 {row:[],col:[]}\r\n        mainPanelScrollY: 0,\r\n        isUnsavedState: false // 是否处于未保存状态\r\n    }\r\n    return state\r\n}\r\n\r\nconst state = getState()\r\n\r\nconst getters = {\r\n    posterItemIds(state, getters) {\r\n        return state.posterItems.map(item => item.id)\r\n    },\r\n    activeItemIds(state) {\r\n        return state.activeItems.map(item => item.id)\r\n    },\r\n    canvasSize(state) {\r\n        return state.canvasSize\r\n    },\r\n    activityId(state) {\r\n        return state.activityId\r\n    }\r\n}\r\n\r\nconst mutations = {\r\n    [MTS.SET_ACTIVITY_ID](state, id) {\r\n        state.activityId = id\r\n    },\r\n    [MTS.SET_PAGE_CONFIG_ID](state, id) {\r\n        state.pageConfigId = id\r\n    },\r\n    [MTS.SET_PAGE_TITLE](state, title) {\r\n        state.pageTitle = title\r\n        state.isUnsavedState = true\r\n    },\r\n    'SET_SCROLL_Y'(state, y) {\r\n        state.mainPanelScrollY = y\r\n    },\r\n    [MTS.SET_CANVAS_POSITION](state, data) {\r\n        state.canvasPosition = data\r\n    },\r\n    [MTS.ADD_BACKGROUND](state, item) {\r\n        if (item instanceof BackgroundWidget) {\r\n            state.background = item\r\n        }\r\n    },\r\n    [MTS.REMOVE_BACKGROUND](state) {\r\n        state.background = new BackgroundWidget()\r\n    },\r\n    [MTS.SET_BACKGROUND_CONFIG](state, cb) {\r\n        if (state.background) {\r\n            cb(state.background)\r\n        }\r\n    },\r\n    // 添加组件\r\n    [MTS.ADD_ITEM](state, item) {\r\n        if (item instanceof Widget) {\r\n            state.posterItems.push(item)\r\n        }\r\n    },\r\n    // 删除组件\r\n    [MTS.REMOVE_ITEM](state, item) {\r\n        if (item.lock) {\r\n            return\r\n        }\r\n        state.posterItems = state.posterItems.filter(i => i.id !== item.id)\r\n    },\r\n    // 替换所有items\r\n    [MTS.REPLACE_POSTER_ITEMS](state, items) {\r\n        state.posterItems = items\r\n    },\r\n    // 添加选中的组件\r\n    [MTS.ADD_ACTIVE_ITEM](state, item) {\r\n        if (item.lock || !item.visible || !item.couldAddToActive) {\r\n            return\r\n        }\r\n        state.activeItems.push(item)\r\n    },\r\n    // 取消选中\r\n    [MTS.REMOVE_ACTIVE_ITEM](state, item) {\r\n        state.activeItems = state.activeItems.filter(i => i.id !== item.id)\r\n    },\r\n    // 替换选中的组件\r\n    [MTS.REPLACE_ACTIVE_ITEMS](state, items) {\r\n        state.activeItems = items.filter(i => (!i.lock) && i.couldAddToActive)\r\n    },\r\n    // 添加辅助组件\r\n    [MTS.ADD_ASSIST_WIDGET](state, item) {\r\n        state.assistWidgets.push(item)\r\n    },\r\n    // 删除辅助组件\r\n    [MTS.REMOVE_ASSIST_WIDGET](state, item) {\r\n        state.assistWidgets = state.assistWidgets.filter(i => i.id !== item.id)\r\n    },\r\n    // 替换辅助组件\r\n    [MTS.REPLACE_ASSIST_WIDGETS](state, items) {\r\n        state.assistWidgets = items\r\n    },\r\n    // 设置图层面板的打开关闭状态\r\n    [MTS.SET_LAYER_PANEL](state, flag) {\r\n        state.layerPanelOpened = !!flag\r\n    },\r\n    // 设置参考线的可见状态\r\n    [MTS.SET_REFERENCE_LINE_VISIBLE](state, flag) {\r\n        state.referenceLineOpened = !!flag\r\n    },\r\n    // 设置某个组件的data\r\n    [MTS.SET_WIDGET_CONFIG](state, { item, cb }) {\r\n        const target = state.posterItems.find(i => i.id === item.id)\r\n        if (target && cb) {\r\n            cb(target)\r\n        }\r\n    },\r\n    // 复制组件\r\n    [MTS.COPY_WIDGET](state, item) {\r\n        const items = Array.isArray(item) ? item : [item]\r\n        const finalItems = items\r\n            .filter(i => i && i.replicable)\r\n            .map(i => {\r\n                i._copyCount = 0\r\n                return i\r\n            })\r\n        state.copiedWidgets = finalItems.length > 0 ? finalItems : null\r\n    },\r\n    // 粘贴组件\r\n    [MTS.PASTE_WIDGET](state) {\r\n        const copiedWidgets = state.copiedWidgets\r\n        if (copiedWidgets && copiedWidgets.length > 0) {\r\n            copiedWidgets.forEach(item => {\r\n                state.posterItems.push(new CopiedWidget(item))\r\n            })\r\n        }\r\n    },\r\n    // 添加参考线\r\n    [MTS.ADD_REFERENCE_LINE](state, { type, position }) {\r\n        state.referenceLine[type].push(position)\r\n    },\r\n    // 删除参考线\r\n    [MTS.REMOVE_REFERENCE_LINE](state, { type, index }) {\r\n        state.referenceLine[type].splice(index, 1)\r\n    },\r\n    // 清空参考线\r\n    [MTS.REMOVE_ALL_REFERENCE_LINE](state) {\r\n        state.referenceLine = {\r\n            row: [],\r\n            col: []\r\n        }\r\n    },\r\n    [MTS.SET_MATCHED_LINE](state, data) {\r\n        state.matchedLine = data\r\n    },\r\n    [MTS.REMOVE_MATCHED_LINE](state) {\r\n        state.matchedLine = null\r\n    },\r\n    [MTS.SET_UNSAVED_STATE](state, flag = false) {\r\n        state.isUnsavedState = flag\r\n    }\r\n\r\n}\r\n\r\nconst actions = {\r\n    resetState({ state, dispatch }) {\r\n        return new Promise((resolve) => {\r\n            for (const [key, val] of Object.entries(getState())) {\r\n                state[key] = val\r\n            }\r\n            dispatch('backup/resetState')\r\n            dispatch('history/resetState')\r\n            setTimeout(() => {\r\n                resolve()\r\n            }, 500)\r\n        })\r\n    },\r\n    setUnsavedState({ commit }, flag) {\r\n        commit(MTS.SET_UNSAVED_STATE, flag)\r\n    },\r\n    setCanvasSize({ state, dispatch }, data) {\r\n        // dispatch('history/push')\r\n        state.canvasSize = data\r\n    },\r\n    addBackground({ state, commit, dispatch }, item) {\r\n        if (state.background) {\r\n            dispatch('history/push')\r\n        }\r\n        commit(MTS.ADD_BACKGROUND, item)\r\n    },\r\n    removeBackground({ commit, dispatch }) {\r\n        dispatch('history/push')\r\n        commit(MTS.REMOVE_BACKGROUND)\r\n    },\r\n    setBackgroundConfig({ state, commit, dispatch }, cb) {\r\n        dispatch('history/push')\r\n        commit(MTS.SET_BACKGROUND_CONFIG, cb)\r\n    },\r\n    seekBackgroundSize({ state }) {\r\n        const background = state.background\r\n        if (background && background.wState.isSolid) {\r\n            background.dragInfo.w = state.canvasSize.width\r\n            background.dragInfo.h = state.canvasSize.height\r\n        }\r\n    },\r\n    addItem({ commit, dispatch, state }, item) {\r\n        const widgetCountLimit = parseInt(item._widgetCountLimit)\r\n        if (widgetCountLimit) {\r\n            const currentCount = (state.posterItems.filter(i => i.type === item.type)).length\r\n            if (currentCount >= widgetCountLimit) {\r\n                Message.error(`<${item.typeLabel || item.type}>类型的组件最多有${widgetCountLimit}个`)\r\n                return\r\n            }\r\n        }\r\n        if (item instanceof Widget) {\r\n            dispatch('history/push')\r\n            if (!(item instanceof CopiedWidget)) {\r\n                commit(MTS.REPLACE_ACTIVE_ITEMS, [item])\r\n            }\r\n            commit(MTS.ADD_ITEM, item)\r\n        }\r\n    },\r\n    removeItem({ commit, getters, dispatch }, item) {\r\n        if (item.lock) {\r\n            return\r\n        }\r\n        if (getters.activeItemIds.includes(item.id)) {\r\n            commit(MTS.REMOVE_ACTIVE_ITEM, item)\r\n        }\r\n        dispatch('history/push')\r\n        commit(MTS.REMOVE_ITEM, item)\r\n    },\r\n    replacePosterItems({ commit, dispatch }, items) {\r\n        dispatch('history/push')\r\n        commit(MTS.REPLACE_POSTER_ITEMS, items)\r\n        commit(MTS.REPLACE_ACTIVE_ITEMS, [])\r\n    },\r\n    addActiveItem({ commit, getters, dispatch }, item) {\r\n        if (getters.activeItemIds.includes(item.id)) {\r\n            return\r\n        }\r\n        commit(MTS.ADD_ACTIVE_ITEM, item)\r\n    },\r\n    removeActiveItem({ commit, dispatch }, item) {\r\n        commit(MTS.REMOVE_ACTIVE_ITEM, item)\r\n    },\r\n    replaceActiveItems({ commit }, items) {\r\n        commit(MTS.REPLACE_ACTIVE_ITEMS, items)\r\n    },\r\n    addAssistWidget({ commit }, item) {\r\n        // dispatch('history/push')\r\n        commit(MTS.ADD_ASSIST_WIDGET, item)\r\n    },\r\n    removeAssistWidget({ commit }, item) {\r\n        // dispatch('history/push')\r\n        commit(MTS.REMOVE_ASSIST_WIDGET, item)\r\n    },\r\n    replaceAssistWidgets({ commit }, items) {\r\n        // dispatch('history/push')\r\n        commit(MTS.REPLACE_ASSIST_WIDGETS, items)\r\n    },\r\n    selectAllItems({ commit, state }) {\r\n        commit(MTS.REPLACE_ACTIVE_ITEMS, state.posterItems)\r\n    },\r\n    setLayerPanel({ commit }, flag) {\r\n        commit(MTS.SET_LAYER_PANEL, flag)\r\n    },\r\n    updateBackgroundDragInfo({ state }, dragInfo) {\r\n        state.background.dragInfo = Object.assign({}, state.background.dragInfo, dragInfo)\r\n    },\r\n    // 更新组件位置、大小等\r\n    updateDragInfo({ state }, { dragInfo, widgetId, updateSelfOnly = false }) {\r\n        const widgetItem = state.posterItems.find(i => i.id === widgetId)\r\n        if (!widgetItem) {\r\n            return\r\n        }\r\n        // if (isMoving) {\r\n        const preDragInfo = widgetItem.dragInfo\r\n        const activeItems = state.activeItems\r\n        dragInfo = Object.assign({}, preDragInfo, dragInfo)\r\n        if (updateSelfOnly) {\r\n            widgetItem.dragInfo = Object.assign({}, widgetItem.dragInfo, dragInfo)\r\n        } else if (activeItems.length > 0) {\r\n            const diffDragInfo = {\r\n                w: dragInfo.w - preDragInfo.w,\r\n                h: dragInfo.h - preDragInfo.h,\r\n                x: dragInfo.x - preDragInfo.x,\r\n                y: dragInfo.y - preDragInfo.y,\r\n                rotateZ: dragInfo.rotateZ - preDragInfo.rotateZ\r\n            }\r\n            activeItems.forEach(item => {\r\n                const { x, y, w, h, rotateZ } = item.dragInfo\r\n                item.dragInfo = {\r\n                    x: x + diffDragInfo.x,\r\n                    y: y + diffDragInfo.y,\r\n                    w: w + diffDragInfo.w,\r\n                    h: h + diffDragInfo.h,\r\n                    rotateZ: rotateZ + diffDragInfo.rotateZ\r\n                }\r\n            })\r\n        }\r\n        // } else {\r\n        //     widgetItem.dragInfo = Object.assign({}, widgetItem.dragInfo, dragInfo)\r\n        // }\r\n    },\r\n    // 更新组件state\r\n    updateWidgetState({ state, dispatch }, { keyPath, value, widgetId, pushHistory = true }) {\r\n        const widgetItem = state.posterItems.find(i => i.id === widgetId)\r\n        if (widgetItem) {\r\n            // 某些操作不添加进历史记录栈\r\n            if (pushHistory) {\r\n                dispatch('history/push')\r\n            }\r\n            _set(widgetItem.wState, keyPath, value)\r\n        }\r\n    },\r\n    // 更改组合的位置\r\n    changeCompositionPosition({ state, dispatch }, type) {\r\n        const activeItems = state.activeItems\r\n        dispatch('history/push')\r\n        /**\r\n         * @sideEffect\r\n         */\r\n        changeCompositionPositionHandler(activeItems, type, state.canvasSize)\r\n    },\r\n    setWidgetConfig({ commit }, { item, cb }) {\r\n        commit(MTS.SET_WIDGET_CONFIG, { item, cb })\r\n    },\r\n    lockItem({ commit, getters }, item) {\r\n        if (getters.activeItemIds.includes(item.id)) {\r\n            commit(MTS.REMOVE_ACTIVE_ITEM, item)\r\n        }\r\n        commit(MTS.SET_WIDGET_CONFIG, { item, cb: (i) => (i.lock = true) })\r\n    },\r\n    unlockItem({ commit }, item) {\r\n        commit(MTS.SET_WIDGET_CONFIG, { item, cb: (i) => (i.lock = false) })\r\n    },\r\n    toggleItemVisible({ commit }, { item, visible }) {\r\n        commit(MTS.SET_WIDGET_CONFIG, { item, cb: (i) => (i.visible = !!visible) })\r\n    },\r\n    widgetMoveToTop({ commit, state, dispatch }, item) {\r\n        dispatch('history/push')\r\n        commit(\r\n            MTS.REPLACE_POSTER_ITEMS,\r\n            arrMoveBottom(state.posterItems, state.posterItems.findIndex(i => i.id === item.id))\r\n        )\r\n    },\r\n    widgetMoveToUpper({ commit, state, dispatch }, item) {\r\n        dispatch('history/push')\r\n        commit(\r\n            MTS.REPLACE_POSTER_ITEMS,\r\n            arrMoveLower(state.posterItems, state.posterItems.findIndex(i => i.id === item.id))\r\n        )\r\n    },\r\n    widgetMoveToLower({ commit, state, dispatch }, item) {\r\n        dispatch('history/push')\r\n        commit(\r\n            MTS.REPLACE_POSTER_ITEMS,\r\n            arrMoveUpper(state.posterItems, state.posterItems.findIndex(i => i.id === item.id))\r\n        )\r\n    },\r\n    widgetMoveToBottom({ commit, state, dispatch }, item) {\r\n        dispatch('history/push')\r\n        commit(\r\n            MTS.REPLACE_POSTER_ITEMS,\r\n            arrMoveTop(state.posterItems, state.posterItems.findIndex(i => i.id === item.id))\r\n        )\r\n    },\r\n    copyWidget({ commit }, item) {\r\n        commit(MTS.COPY_WIDGET, item)\r\n    },\r\n    pasteWidget({ commit, dispatch }) {\r\n        dispatch('history/push')\r\n        commit(MTS.PASTE_WIDGET)\r\n    },\r\n    addReferenceLine({ commit, dispatch }, item) {\r\n        dispatch('history/push')\r\n        commit(MTS.ADD_REFERENCE_LINE, item)\r\n    },\r\n    removeReferenceLine({ commit, dispatch }, item) {\r\n        dispatch('history/push')\r\n        commit(MTS.REMOVE_REFERENCE_LINE, item)\r\n    },\r\n    removeAllReferenceLine({ commit, dispatch }) {\r\n        dispatch('history/push')\r\n        commit(MTS.REMOVE_ALL_REFERENCE_LINE)\r\n    },\r\n    setReferenceLineVisible({ commit }, flag) {\r\n        commit(MTS.SET_REFERENCE_LINE_VISIBLE, flag)\r\n    },\r\n    setMatchedLine({ commit }, data) {\r\n        commit(MTS.SET_MATCHED_LINE, data)\r\n    },\r\n    removeMatchedLine({ commit }) {\r\n        commit(MTS.REMOVE_MATCHED_LINE)\r\n    },\r\n    /**\r\n     * 更新当前页面配置\r\n     * 参数pageConfig是从后台获取到的页面配置信息\r\n     */\r\n    updatePageConfig({ dispatch, state, commit }, pageConfig) {\r\n        let recoverData = {}\r\n        if (!pageConfig || !isPlainObject(pageConfig)) {\r\n            commit(MTS.SET_PAGE_CONFIG_ID, '')\r\n            recoverData = {\r\n                background: new BackgroundWidget(),\r\n                posterItems: [],\r\n                referenceLine: getState().referenceLine\r\n            }\r\n        } else {\r\n            commit(MTS.SET_PAGE_CONFIG_ID, pageConfig.pageConfigId)\r\n            const baseConfig = JSON.parse(pageConfig.config)\r\n            const posterItems = pageConfig.items\r\n            let background\r\n            try {\r\n                const backgroundItem = posterItems.splice(\r\n                    posterItems.findIndex(i => i.type === 'background'), 1\r\n                )[0]\r\n                if (backgroundItem) {\r\n                    background = JSON.parse(backgroundItem.config)\r\n                }\r\n            } catch (e) {\r\n                console.error(e)\r\n                background = new BackgroundWidget()\r\n            }\r\n            const defaultState = getState()\r\n            recoverData = {\r\n                background,\r\n                posterItems: posterItems.map(item => JSON.parse(item.config)),\r\n                referenceLine: baseConfig.referenceLine || defaultState.referenceLine,\r\n                canvasSize: baseConfig.canvasSize || defaultState.canvasSize,\r\n                pageTitle: pageConfig.title || ''\r\n            }\r\n        }\r\n        dispatch('backup/recover', recoverData)\r\n        commit(MTS.SET_UNSAVED_STATE, false)\r\n    },\r\n    /**\r\n     * 保存/新增当前的活动页配置\r\n     */\r\n    saveActivityPageConfig({ state, commit, rootGetters }) {\r\n        const requestData = {\r\n            title: state.pageTitle,\r\n            // baseConfig\r\n            config: JSON.stringify({\r\n                referenceLine: state.referenceLine,\r\n                canvasSize: state.canvasSize\r\n            }),\r\n            items: [\r\n                {\r\n                    type: state.background.type,\r\n                    content: '',\r\n                    config: JSON.stringify(state.background)\r\n                },\r\n                ...state.posterItems.map((item, index) => {\r\n                    return {\r\n                        type: item.type,\r\n                        content: '',\r\n                        config: JSON.stringify({\r\n                            ...item,\r\n                            _sort: index + 1\r\n                        })\r\n                    }\r\n                })\r\n            ]\r\n        }\r\n      const form_saveAxure = {\r\n        token: localStorage.getItem('Token'),\r\n        axure_id: localStorage.getItem('axure_id'),\r\n        title: requestData['title'],\r\n        items: JSON.stringify(requestData['items']),\r\n        config: requestData['config']\r\n      }\r\n      console.log(form_saveAxure)\r\n     return axios.post('/axure/update', qs.stringify(form_saveAxure))\r\n        .then(res => {\r\n            Message.success('保存成功')\r\n            return res\r\n          },\r\n          () => {\r\n            Message.error('保存失败')\r\n            return Promise.reject()\r\n          }\r\n        )\r\n    }\r\n}\r\n\r\nexport default {\r\n    namespaced: true,\r\n    state,\r\n    getters,\r\n    mutations,\r\n    actions,\r\n    modules: {\r\n        history,\r\n        backup\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/store/modules/poster/poster.js b/src/store/modules/poster/poster.js
--- a/src/store/modules/poster/poster.js	(revision 1cd5870b0ffe30c88df30f300774cdfaa67db15e)
+++ b/src/store/modules/poster/poster.js	(date 1659676031120)
@@ -466,6 +466,7 @@
                 pageTitle: pageConfig.title || ''
             }
         }
+      console.log(recoverData)
         dispatch('backup/recover', recoverData)
         commit(MTS.SET_UNSAVED_STATE, false)
     },
Index: src/views/posterEditor/index.vue
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><template>\r\n  <div class=\"main-container\">\r\n    <el-row style=\"background: #2f2f2f; min-height: 40px\">\r\n      <el-col :span=\"8\">\r\n        <el-button class=\"backbutton\" style=\"margin-left: 20px; margin-top: 3px\" @click=\"back\">\r\n          <i class=\"el-icon-back\" style=\"font-size: x-large\"></i>\r\n        </el-button>\r\n      </el-col>\r\n      <el-col :span=\"8\" style=\"text-align: center; margin-top: 12px\">\r\n        <div style=\"font-size: 16px; color: #ececec\" contenteditable=\"true\">\r\n          原型名称\r\n        </div>\r\n        <div>\r\n          <!--          <el-button style=\"padding: 5px; background: #2f2f2f; border: 0\">-->\r\n          <!--            <i class=\"el-icon-more\" style=\"font-size: large; color: #ececec\"></i>-->\r\n          <!--          </el-button>-->\r\n        </div>\r\n      </el-col>\r\n    </el-row>\r\n    <div class=\"poster-editor\" :class=\"{ 'init-loading': initLoading }\">\r\n      <div class=\"base\">\r\n        <!-- 左侧添加组件栏 -->\r\n        <left-side />\r\n        <!-- 主要操作区域 -->\r\n        <main-component ref=\"main\" />\r\n        <!-- 常用功能栏 -->\r\n        <extend-side-bar />\r\n        <!-- 组件编辑区域 -->\r\n        <control-component />\r\n      </div>\r\n      <!-- 图层面板 -->\r\n      <transition name=\"el-zoom-in-top\">\r\n        <layer-panel v-show=\"layerPanelOpened\" />\r\n      </transition>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapState, mapGetters, mapActions } from './poster.vuex'\r\nimport controlComponent from './control/index'\r\nimport mainComponent from './main/index'\r\nimport leftSide from './leftSide/index'\r\nimport extendSideBar from './extendSideBar'\r\nimport layerPanel from './extendSideBar/layerPanel'\r\nimport store from '@/store'\r\nimport posterModule from '@/store/modules/poster/poster'\r\nimport router from '@/router'\r\nimport qs from 'qs'\r\n\r\nconst DELETE_KEY = 8 // delete\r\nconst COPY_KEY = 67 // c\r\nconst PASTE_KEY = 86 // v\r\nconst LAYER_PANEL_KEY = 76 // l\r\nconst REFERENCE_LINE_KEY = 72 // h\r\nconst UNDO_KEY = 90 // z\r\nconst BACKUP_KEY = 83 // s\r\nconst SELECT_ALL_KEY = 65 // a\r\n\r\nexport default {\r\n  components: {\r\n    controlComponent,\r\n    mainComponent,\r\n    leftSide,\r\n    extendSideBar,\r\n    layerPanel\r\n  },\r\n  data() {\r\n    return {\r\n      form_update: {\r\n        token: localStorage.getItem('Token'),\r\n        axure_id: localStorage.getItem('axure_id')\r\n      },\r\n      initLoading: false\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapState([\r\n      'posterItems',\r\n      'layerPanelOpened',\r\n      'activeItems',\r\n      'copiedWidgets',\r\n      'referenceLineOpened',\r\n      'isUnsavedState'\r\n    ]),\r\n    ...mapGetters(['activeItemIds'])\r\n  },\r\n  beforeRouteLeave(to, from, next) {\r\n    if (this.isUnsavedState) {\r\n      const answer = window.confirm(\r\n        '当前页面配置未保存,退出将不会保存,是否继续退出？'\r\n      )\r\n      if (answer) {\r\n        next()\r\n      } else {\r\n        next(false)\r\n      }\r\n    } else {\r\n      next()\r\n    }\r\n  },\r\n  beforeCreate() {\r\n    if (!store.hasModule('poster')) {\r\n      /** 注册poster-vuex模块 */\r\n      store.registerModule('poster', posterModule)\r\n    }\r\n  },\r\n  async created() {\r\n    this.initLoading = true\r\n    // if (!store.hasModule('poster')) return\r\n    const loading = this.$loading({\r\n      lock: true,\r\n      text: '正在初始化编辑器',\r\n      spinner: 'el-icon-loading',\r\n      background: 'rgba(255, 255, 255, 0.6)'\r\n    })\r\n    await this.resetState()\r\n    await this.updatePage()\r\n    loading.close()\r\n    this.initLoading = false\r\n  },\r\n  async mounted() {\r\n    document.addEventListener('keydown', this.keydownHandle)\r\n    this.body = document.body\r\n    this.mainPanelRef = this.$refs.main.$refs.mainPanel\r\n  },\r\n  beforeDestroy() {\r\n    document.removeEventListener('keydown', this.keydownHandle)\r\n    this.killAutoSaveTask()\r\n  },\r\n  methods: {\r\n    ...mapActions([\r\n      'replacePosterItems',\r\n      'replaceActiveItems',\r\n      'pasteWidget',\r\n      'copyWidget',\r\n      'setLayerPanel',\r\n      'setReferenceLineVisible',\r\n      'resetState',\r\n      'updatePageConfig'\r\n    ]),\r\n    ...mapActions({\r\n      undo: 'history/undo',\r\n      redo: 'history/redo',\r\n      backupInit: 'backup/init',\r\n      killAutoSaveTask: 'backup/killAutoSaveTask',\r\n      backupInvoker: 'backup/invoker'\r\n    }),\r\n    back() {\r\n      router.push('/list/table-group-project')\r\n    },\r\n    updatePage() {\r\n      this.$axios.post('/axure/getAxureInfo', qs.stringify(this.form_update))\r\n        .then(res => {\r\n          if (res.data.success) {\r\n            const pageConfig = {\r\n              pageConfigId: res.data.data.config_id,\r\n              config: res.data.data.config,\r\n              items: JSON.parse(res.data.data.items)\r\n            }\r\n            console.log(pageConfig)\r\n            this.updatePageConfig(pageConfig)\r\n          }\r\n        })\r\n    },\r\n    keydownHandle(e) {\r\n      if (e.target !== this.body) {\r\n        return\r\n      }\r\n      const keyCode = e.keyCode\r\n      const ctrl = e.ctrlKey || e.metaKey\r\n      const shift = e.shiftKey\r\n      switch (true) {\r\n        case keyCode === DELETE_KEY:\r\n          if (this.activeItemIds.length > 0) {\r\n            this.replacePosterItems(\r\n              this.posterItems.filter(\r\n                item => !this.activeItemIds.includes(item.id)\r\n              )\r\n            )\r\n          }\r\n          break\r\n        case keyCode === PASTE_KEY && ctrl:\r\n          if (this.copiedWidgets) {\r\n            this.pasteWidget()\r\n          }\r\n          break\r\n        case keyCode === COPY_KEY && ctrl:\r\n          if (this.activeItems.length > 0) {\r\n            // const copiedWidgets = []\r\n            // const widgetRefs = this.mainPanelRef.$refs\r\n            // this.activeItemIds.forEach((itemId) => {\r\n            // const widgetRef = widgetRefs[itemId][0]\r\n            // copiedWidgets.push(getCopyData(widgetRef.item, widgetRef._self))\r\n            // })\r\n            const copiedWidgets = [...this.activeItems].map(item => {\r\n              item._copyFrom = 'command'\r\n              return item\r\n            })\r\n            this.copyWidget(copiedWidgets)\r\n          }\r\n          break\r\n        case keyCode === LAYER_PANEL_KEY && ctrl:\r\n          e.preventDefault()\r\n          this.setLayerPanel(!this.layerPanelOpened)\r\n          break\r\n        case keyCode === REFERENCE_LINE_KEY && ctrl:\r\n          e.preventDefault()\r\n          this.setReferenceLineVisible(!this.referenceLineOpened)\r\n          break\r\n        case keyCode === UNDO_KEY && ctrl && shift:\r\n          this.redo()\r\n          break\r\n        case keyCode === UNDO_KEY && ctrl:\r\n          this.undo()\r\n          break\r\n        case keyCode === BACKUP_KEY && ctrl:\r\n          e.preventDefault()\r\n          this.backupInvoker()\r\n          break\r\n        case keyCode === SELECT_ALL_KEY:\r\n          e.preventDefault()\r\n          this.replaceActiveItems(this.posterItems)\r\n          break\r\n        default:\r\n          break\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n::v-deep .title {\r\n  color: #2c2c2c;\r\n  background-color: #2c2c2c;\r\n}\r\n.backbutton {\r\n  color: white;\r\n  background: #2c2c2c;\r\n  height: 30px;\r\n  border: 0;\r\n  margin-top: 5px;\r\n  padding: 5px;\r\n}\r\n.backbutton:hover {\r\n  color: white;\r\n  background: #000000;\r\n  height: 35px;\r\n}\r\n.backbutton:focus {\r\n  color: white;\r\n  background: #000000;\r\n  height: 35px;\r\n}\r\n.head {\r\n  background: #2c2c2c;\r\n  min-height: 5%;\r\n}\r\n.poster-editor {\r\n  width: 100%;\r\n  min-width: 900px;\r\n  height: 96%;\r\n  background-color: #fff;\r\n  position: fixed;\r\n  &.init-loading {\r\n    filter: blur(6px);\r\n  }\r\n  .base {\r\n    width: 100%;\r\n    height: 100%;\r\n    position: relative;\r\n    display: flex;\r\n  }\r\n  .left-side {\r\n    height: 100%;\r\n  }\r\n  .poster-editor-main {\r\n    flex: 1;\r\n    height: 100%;\r\n    box-sizing: border-box;\r\n  }\r\n  .extend-side-bar {\r\n    width: 50px;\r\n    height: 100%;\r\n    border-left: 1px solid $colorBorder;\r\n  }\r\n  .poster-editor-control {\r\n    width: 200px;\r\n    height: 100%;\r\n    box-sizing: border-box;\r\n    border-left: 1px solid $colorBorder;\r\n  }\r\n}\r\n</style>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/views/posterEditor/index.vue b/src/views/posterEditor/index.vue
--- a/src/views/posterEditor/index.vue	(revision 1cd5870b0ffe30c88df30f300774cdfaa67db15e)
+++ b/src/views/posterEditor/index.vue	(date 1659676734081)
@@ -47,6 +47,7 @@
 import posterModule from '@/store/modules/poster/poster'
 import router from '@/router'
 import qs from 'qs'
+import _merge from 'lodash/merge'
 
 const DELETE_KEY = 8 // delete
 const COPY_KEY = 67 // c
@@ -71,6 +72,11 @@
         token: localStorage.getItem('Token'),
         axure_id: localStorage.getItem('axure_id')
       },
+      pageConfig: {
+        pageConfigId: '',
+        config: '',
+        items: ''
+      },
       initLoading: false
     }
   },
@@ -86,18 +92,7 @@
     ...mapGetters(['activeItemIds'])
   },
   beforeRouteLeave(to, from, next) {
-    if (this.isUnsavedState) {
-      const answer = window.confirm(
-        '当前页面配置未保存,退出将不会保存,是否继续退出？'
-      )
-      if (answer) {
-        next()
-      } else {
-        next(false)
-      }
-    } else {
       next()
-    }
   },
   beforeCreate() {
     if (!store.hasModule('poster')) {
@@ -149,17 +144,28 @@
     back() {
       router.push('/list/table-group-project')
     },
+    // getConfig () {
+    //   this.$axios.post('/axure/getAxureInfo', qs.stringify(this.form_update))
+    //     .then(res => {
+    //       if (res.data.success) {
+    //         this.pageConfig.pageConfigId = res.data.data.config_id
+    //           this.pageConfig.config = JSON.parse(res.data.data.config)
+    //           this.pageConfig.items.JSON.parse(res.data.data.items)
+    //       }
+    //       })
+    //         console.log(this.pageConfig)
+    // },
     updatePage() {
       this.$axios.post('/axure/getAxureInfo', qs.stringify(this.form_update))
         .then(res => {
           if (res.data.success) {
             const pageConfig = {
               pageConfigId: res.data.data.config_id,
-              config: res.data.data.config,
-              items: JSON.parse(res.data.data.items)
+              config: JSON.parse(res.data.data.config),
+              items: JSON.parse(res.data.data.items),
+              title: res.data.data.title
             }
-            console.log(pageConfig)
-            this.updatePageConfig(pageConfig)
+            this.$store.dispatch('poster/updatePageConfig', pageConfig)
           }
         })
     },
Index: src/views/list/table-group-message.vue
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><template>\r\n  <div class=\"main-container\">\r\n    <TableHeader :can-collapsed=\"false\">\r\n      <template slot=\"left\">\r\n        <el-button\r\n          slot=\"reference\"\r\n          class=\"back-button\"\r\n          float=\"left\"\r\n          @click=\"toProjectlist()\"\r\n        >\r\n          <i class=\"el-icon-back\"></i>\r\n        </el-button>\r\n        <p id=\"teamName\" class=\"teamtitle\" v-text=\"team_name\">\r\n          team_name\r\n        </p>\r\n      </template>\r\n      <template slot=\"right\">\r\n        <el-popover\r\n          v-model=\"visible\"\r\n          placement=\"top\"\r\n          width=\"350\"\r\n        >\r\n          <el-button\r\n            slot=\"reference\"\r\n            class=\"button-style\"\r\n            style=\"border-color: #ffd45c\"\r\n            @click=\"dialogInviteVisible = true\"\r\n          >邀请成员\r\n            <i class=\"el-icon-user\"></i>\r\n          </el-button>\r\n        </el-popover>\r\n\r\n        <el-popover\r\n          v-model=\"visible\"\r\n          placement=\"top\"\r\n          width=\"350\"\r\n          trigger=\"click\"\r\n        >\r\n          <el-button\r\n            slot=\"reference\"\r\n            class=\"button-style\"\r\n            style=\"border-color: #57b1ff\"\r\n            @click=\"form_createProject.project_name = '', form_createProject.project_info = '', dialogCreateProjectVisible = true\"\r\n          >创建新项目\r\n            <i class=\"el-icon-plus\"></i>\r\n          </el-button>\r\n        </el-popover>\r\n\r\n        <el-popover\r\n          v-model=\"visible\"\r\n          placement=\"top\"\r\n          width=\"350\"\r\n        >\r\n          <el-button\r\n            slot=\"reference\"\r\n            class=\"button-style\"\r\n          ><el-dropdown trigger=\"click\" @command=\"onCommad\">\r\n            <div class=\"action-wrapper\" style=\"font-size: 16px ;font-weight: bold\">\r\n              <i class=\"el-icon-setting\"></i>\r\n              设置\r\n            </div>\r\n            <el-dropdown-menu slot=\"dropdown\">\r\n              <el-dropdown-item icon=\"el-icon-edit-outline\" command=\"personalCenter\">\r\n                <el-button type=\"text\" @click=\"dialogRenameVisible = true\">团队重命名</el-button>\r\n              </el-dropdown-item>\r\n              <el-dropdown-item icon=\"el-icon-edit-outline\" command=\"personalCenter\">\r\n                <el-button type=\"text\" @click=\"quitTeam\">退出团队</el-button>\r\n              </el-dropdown-item>\r\n              <el-dropdown-item icon=\"el-icon-switch-button\" command=\"logout\">\r\n                <el-button type=\"text\" style=\"color: red\" @click=\"deleteTeam\">删除团队</el-button>\r\n              </el-dropdown-item>\r\n            </el-dropdown-menu>\r\n          </el-dropdown>\r\n          </el-button>\r\n        </el-popover>\r\n      </template>\r\n    </TableHeader>\r\n    <el-dialog title=\"邀请成员\" :visible.sync=\"dialogInviteVisible\">\r\n      <el-form :model=\"form_invite\">\r\n        <el-form-item label=\"成员邮箱\" :label-width=\"formLabelWidth\">\r\n          <el-input v-model=\"form_invite.email\" autocomplete=\"off\" />\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"dialogInviteVisible = false; form_invite.email = '' \">取 消</el-button>\r\n        <el-button @click=\"invite(),dialogInviteVisible = false\">确 定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n    <el-dialog title=\"团队重命名\" :visible.sync=\"dialogRenameVisible\">\r\n      <el-form :model=\"form_rename\">\r\n        <el-form-item label=\"新的团队名称\" :label-width=\"formLabelWidth\">\r\n          <el-input v-model=\"form_rename.teamName\" autocomplete=\"off\" />\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"dialogRenameVisible = false; form_rename.teamName = '' \">取 消</el-button>\r\n        <el-button @click=\"Rename\">确 定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n    <el-dialog title=\"创建新项目\" :visible.sync=\"dialogCreateProjectVisible\">\r\n      <el-form :model=\"form_project\">\r\n        <el-form-item label=\"项目名称\" :label-width=\"formLabelWidth\">\r\n          <el-input v-model=\"form_createProject.project_name\" autocomplete=\"off\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"项目简介(可不填)\" :label-width=\"formLabelWidth\">\r\n          <el-input v-model=\"form_createProject.project_info\" autocomplete=\"off\" />\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"dialogCreateProjectVisible = false; form_createProject.project_name = '' \">取 消</el-button>\r\n        <el-button @click=\"createProject(), dialogCreateProjectVisible = false\">确 定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n    <el-dialog title=\"修改项目信息\" :visible.sync=\"dialogUpdateProjectVisible\">\r\n      <el-form :model=\"form_project\">\r\n        <el-form-item label=\"项目新名称\" :label-width=\"formLabelWidth\">\r\n          <el-input v-model=\"form_updateProject.project_name\" autocomplete=\"off\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"项目新简介（可不填）\" :label-width=\"formLabelWidth\">\r\n          <el-input v-model=\"form_updateProject.project_info\" autocomplete=\"off\" />\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"dialogUpdateProjectVisible = false; form_updateProject.project_name = '' \">取 消</el-button>\r\n        <el-button @click=\"updateProject(), dialogUpdateProjectVisible = false\">确 定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n    <el-dialog title=\"设置权限\" :visible.sync=\"dialogPerm\">\r\n      <el-form :model=\"form_power\">\r\n        <el-form-item label=\"权限（请输入“成员”或者“管理员”）\" :label-width=\"formLabelWidth\">\r\n          <el-input v-model=\"form_power.userPerm\" autocomplete=\"off\" />\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"dialogPerm = false; form_power.userPerm = '' \">取 消</el-button>\r\n        <el-button @click=\"givePower\">确 定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n    <TableBody ref=\"tableBody\" class=\"temptablebody\">\r\n      <template>\r\n        <el-tabs :tab-position=\"top\" style=\"height: 200px;\" class=\"messagecss\">\r\n          <el-tab-pane>\r\n            <span slot=\"label\" class=\"fontClass\" style=\"font-size: large; color: #2c2c2c\">项目</span>\r\n            <el-table\r\n              ref=\"table\"\r\n              v-loading=\"tableloading\"\r\n              class=\"table-custom\"\r\n              :data=\"projectList\"\r\n              :header-cell-style=\"tableConfig.headerCellStyle\"\r\n              :size=\"tableConfig.size\"\r\n              :cell-style=\"tableConfig.cellStyle\"\r\n              @row-dblclick=\"handleCurrentChange\"\r\n            >\r\n              <el-table-column\r\n                width=\"45\"\r\n              />\r\n              <el-table-column\r\n                align=\"center\"\r\n                label=\"名称\"\r\n                prop=\"project_name\"\r\n                width=\"300px\"\r\n              />\r\n              <el-table-column\r\n                align=\"center\"\r\n                label=\"简介\"\r\n                prop=\"project_info\"\r\n                width=\"400px\"\r\n              />\r\n              <el-table-column\r\n                align=\"center\"\r\n                label=\"操作\"\r\n                width=\"100\"\r\n              >\r\n                <template slot-scope=\"scope\">\r\n                  <el-button\r\n                    slot=\"reference\"\r\n                    class=\"morebutton\"\r\n                  >\r\n                    <el-dropdown trigger=\"click\" @command=\"onCommad\">\r\n                      <div class=\"action-wrapper\" style=\"font-size: 16px ;font-weight: bold\">\r\n                        <span class=\"nick-name el-dropdown-link\">\r\n                          <i class=\"el-icon-more\"></i>\r\n                        </span>\r\n                      </div>\r\n                      <el-dropdown-menu slot=\"dropdown\">\r\n                        <el-dropdown-item icon=\"el-icon-edit-outline\" command=\"personalCenter\">\r\n                          <el-button type=\"text\" @click=\"form_updateProject.project_id = scope.row.project_id, form_updateProject.project_name = scope.row.project_name, form_updateProject.project_info = scope.row.project_info,dialogUpdateProjectVisible = true\">修改项目信息</el-button>\r\n                        </el-dropdown-item>\r\n                        <el-dropdown-item icon=\"el-icon-switch-button\" command=\"logout\">\r\n                          <el-button type=\"text\" @click=\"deleteProjectItem(scope.row)\">删除项目</el-button>\r\n                        </el-dropdown-item>\r\n                      </el-dropdown-menu>\r\n                    </el-dropdown>\r\n                  </el-button>\r\n                </template>\r\n              </el-table-column>\r\n            </el-table>\r\n          </el-tab-pane>\r\n          <el-tab-pane>\r\n            <span slot=\"label\" class=\"fontClass\" style=\"font-size: large; color: #2c2c2c\">成员</span>\r\n            <el-table\r\n              ref=\"table\"\r\n              v-loading=\"loading\"\r\n              :data=\"memberList\"\r\n              :header-cell-style=\"tableConfig.headerCellStyle\"\r\n              :size=\"tableConfig.size\"\r\n              :cell-style=\"tableConfig.cellStyle\"\r\n            >\r\n              <el-table-column\r\n                width=\"45\"\r\n              />\r\n              <el-table-column\r\n                align=\"center\"\r\n                label=\"名称\"\r\n                prop=\"username\"\r\n                width=\"200px\"\r\n              />\r\n              <el-table-column\r\n                align=\"center\"\r\n                label=\"真实姓名\"\r\n                prop=\"real_name\"\r\n                width=\"200px\"\r\n              />\r\n              <el-table-column\r\n                align=\"center\"\r\n                label=\"电子邮箱\"\r\n                prop=\"email\"\r\n                width=\"250px\"\r\n              />\r\n              <el-table-column\r\n                align=\"center\"\r\n                label=\"身份\"\r\n                prop=\"user_perm\"\r\n                width=\"150px\"\r\n              />\r\n              <el-table-column\r\n                align=\"center\"\r\n                label=\"操作\"\r\n                width=\"100\"\r\n              >\r\n                <template slot-scope=\"scope\">\r\n                  <el-button\r\n                    slot=\"reference\"\r\n                    class=\"spcbutton-style\"\r\n                  >\r\n                    <el-dropdown trigger=\"click\" @command=\"onCommad\">\r\n                      <div class=\"action-wrapper\">\r\n                        <span class=\"nick-name el-dropdown-link\">\r\n                          <i class=\"el-icon-more\"></i>\r\n                        </span>\r\n                      </div>\r\n                      <el-dropdown-menu slot=\"dropdown\">\r\n                        <el-dropdown-item icon=\"el-icon-circle-check\" command=\"personalCenter\">\r\n                          <el-button type=\"text\" @click=\"form_power.memberId = scope.row.user_id, form_power.userPerm = scope.row.user_perm, dialogPerm = true\">赋予管理员权限</el-button>\r\n                        </el-dropdown-item>\r\n                        <el-dropdown-item icon=\"el-icon-close\" command=\"logout\">\r\n                          <el-button type=\"text\" @click=\"deleteMemberItem(scope.row)\">移出团队</el-button>\r\n                        </el-dropdown-item>\r\n                      </el-dropdown-menu>\r\n                    </el-dropdown>\r\n                  </el-button>\r\n                </template>\r\n              </el-table-column>\r\n            </el-table>\r\n          </el-tab-pane>\r\n        </el-tabs>\r\n      </template>\r\n    </TableBody>\r\n    <TableBody ref=\"tableBody\" class=\"rightside\">\r\n      <template>\r\n        <div class=\"rightsidefont\">\r\n          About\r\n        </div>\r\n        <el-divider />\r\n        <div>\r\n          <span>{{ teamInfo }}</span>\r\n          <el-divider />\r\n        </div>\r\n      </template>\r\n    </TableBody>\r\n\r\n    <!--    <TableFooter-->\r\n    <!--      :page-size=\"pageModel.pageSize\"-->\r\n    <!--      :total-size=\"pageModel.totalSize\"-->\r\n    <!--      @pageSizeChanged=\"pageSizeChanged\"-->\r\n    <!--      @currentChanged=\"currentChanged\"-->\r\n    <!--      @onRefresh=\"doRefresh\"-->\r\n    <!--    />-->\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport TableMixin, { PageModelMixin } from '@/mixins/TableMixin'\r\nimport {\r\n  GetDataMixin,\r\n  AddItemMixin,\r\n  DeleteItemsMixin,\r\n  UpdateItemMixin,\r\n  RefreshActionMixin\r\n} from '@/mixins/ActionMixin'\r\nimport SingleUpload from '@/components/common/SingleUpload.vue'\r\nimport BaseForm from '@/components/common/BaseForm.vue'\r\nimport draggable from '@/directive/draggable'\r\nimport store from '@/layouts/store'\r\nimport qs from 'qs'\r\nimport { getters } from '@/store/modules/user.js'\r\nimport { state } from '@/store/modules/user.js'\r\nexport default {\r\n  name: 'TableGroupMember',\r\n  // eslint-disable-next-line vue/no-unused-components\r\n  components: { SingleUpload, BaseForm },\r\n  directives: { draggable },\r\n  mixins: [\r\n    TableMixin,\r\n    PageModelMixin,\r\n    GetDataMixin,\r\n    AddItemMixin,\r\n    DeleteItemsMixin,\r\n    UpdateItemMixin,\r\n    RefreshActionMixin\r\n  ],\r\n  data() {\r\n    return {\r\n      visible_setPerm: true,\r\n      loading: false,\r\n      dialogRenameVisible: false,\r\n      dialogPerm: false,\r\n      form_member: {\r\n        token: getters.getToken(state),\r\n        user_id: getters.getUserId(state),\r\n        teamId: localStorage.getItem('team_id')\r\n      },\r\n      teamInfo: localStorage.getItem('team_info'),\r\n      form_power: {\r\n        token: getters.getToken(state),\r\n        user_id: getters.getUserId(state),\r\n        teamId: localStorage.getItem('team_id'),\r\n        memberId: '',\r\n        userPerm: ''\r\n      },\r\n      form_getProjectList: {\r\n        token: getters.getToken(state),\r\n        user_id: getters.getUserId(state),\r\n        team_id: localStorage.getItem('team_id')\r\n      },\r\n      form_createProject: {\r\n        token: getters.getToken(state),\r\n        user_id: getters.getUserId(state),\r\n        team_id: localStorage.getItem('team_id'),\r\n        project_name: '',\r\n        project_info: ''\r\n      },\r\n      form_deleteProject: {\r\n        token: getters.getToken(state),\r\n        user_id: getters.getUserId(state),\r\n        project_id: 0\r\n      },\r\n      form_updateProject: {\r\n        token: getters.getToken(state),\r\n        user_id: getters.getUserId(state),\r\n        project_id: 0,\r\n        project_name: '',\r\n        project_info: ''\r\n      },\r\n      visible: false,\r\n      form_invite: {\r\n        token: getters.getToken(state),\r\n        user_id: getters.getUserId(state),\r\n        teamId: Number(localStorage.getItem('team_id')),\r\n        email: ''\r\n      },\r\n      form_project: {\r\n        token: getters.getToken(state),\r\n        username: getters.getUserName(state),\r\n        project_name: '',\r\n        team_id: Number(localStorage.getItem('team_id'))\r\n      },\r\n      form_deleteMember: {\r\n        token: getters.getToken(state),\r\n        username: getters.getUserName(state),\r\n        user_id: getters.getUserId(state),\r\n        teamId: Number(localStorage.getItem('team_id')),\r\n        memberId: null\r\n      },\r\n      form_rename: {\r\n        token: getters.getToken(state),\r\n        user_id: getters.getUserId(state),\r\n        teamId: Number(localStorage.getItem('team_id')),\r\n        teamName: ''\r\n      },\r\n      form_quitTeam: {\r\n        token: getters.getToken(state),\r\n        user_id: getters.getUserId(state),\r\n        teamId: Number(localStorage.getItem('team_id'))\r\n      },\r\n      form_setPerm: {\r\n        token: getters.getToken(state),\r\n        username: getters.getUserName(state),\r\n        user_id: getters.getUserId(state),\r\n        team_id: Number(localStorage.getItem('team_id')),\r\n        member_id: 0,\r\n        perm: null\r\n      },\r\n      team_name: localStorage.getItem('team_name'),\r\n      dialogInviteVisible: false,\r\n      dialogCreateProjectVisible: false,\r\n      dialogUpdateProjectVisible: false,\r\n      dialogMethodVisible: false,\r\n      memberList: [],\r\n      projectList: [],\r\n      deleteMemberList: [],\r\n      powerOptions: [\r\n        {\r\n          value: 1,\r\n          label: '队长'\r\n        },\r\n        {\r\n          value: 2,\r\n          label: '开发者'\r\n        },\r\n        {\r\n          value: 3,\r\n          label: '观察者'\r\n        }\r\n      ],\r\n      userModel: {\r\n        address: '',\r\n        avatar: '',\r\n        gender: 1,\r\n        id: 1,\r\n        lastLoginIp: '',\r\n        lastLoginTime: '',\r\n        nickName: '',\r\n        status: 0,\r\n        vip: 1\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    this.getMemberList()\r\n    this.getProjectList()\r\n  },\r\n  methods: {\r\n    givePower() {\r\n      if (this.form_power.userPerm === '管理员') {\r\n        this.form_power.userPerm = 1\r\n      } else if (this.form_power.userPerm === '成员') {\r\n        this.form_power.userPerm = 2\r\n      } else {\r\n        this.form_power.userPerm = 0\r\n      }\r\n      this.$axios.post('/team/setPerm', qs.stringify(this.form_power))\r\n      .then(res => {\r\n        if (res.data.success) {\r\n          this.$message.success(res.data.message)\r\n        } else {\r\n          this.$message.error(res.data.message)\r\n        }\r\n        this.dialogPerm = false\r\n        this.getMemberList()\r\n      })\r\n    },\r\n    getProjectList() {\r\n      this.loading = true\r\n      this.projectList = []\r\n      this.$axios.post('/project/getProjectList', qs.stringify(this.form_getProjectList))\r\n        .then((res) => {\r\n          if (res.data.success) {\r\n            for (let i = 0; i < res.data.data.length; i++) {\r\n              const projects = {\r\n                project_id: 0,\r\n                team_id: 0,\r\n                project_name: '',\r\n                project_info: ''\r\n              }\r\n              projects.project_id = res.data.data[i].project_id\r\n              projects.team_id = res.data.data[i].team_id\r\n              projects.project_name = res.data.data[i].project_name\r\n              projects.project_info = res.data.data[i].project_info\r\n              let flag = 0\r\n              for (let i = 0; i < this.projectList.length; i++) {\r\n                if (this.projectList[i].project_id === projects.project_id) {\r\n                  flag = 1\r\n                  break\r\n                }\r\n              }\r\n              if (!flag) { this.projectList.push(projects) }\r\n              // this.$message.success(res.data.message)\r\n            }\r\n          } else {\r\n             //this.$message.error(res.data.message)\r\n          }\r\n           this.loading = false\r\n         })\r\n    },\r\n    getMemberList() {\r\n      this.loading = true\r\n      this.memberList = []\r\n      this.$axios.post('/team/getMemberList', qs.stringify(this.form_member))\r\n        .then((res) => {\r\n          if (res.data.success) {\r\n            for (let i = 0; i < res.data.data.length; i++) {\r\n              const members = {\r\n                user_id: 0,\r\n                username: '',\r\n                email: '',\r\n                user_perm: '',\r\n                real_name: ''\r\n              }\r\n              members.user_id = res.data.data[i].user_id\r\n              members.real_name = res.data.data[i].real_name\r\n              members.email = res.data.data[i].email\r\n              members.username = res.data.data[i].username\r\n              if (res.data.data[i].user_perm === 0) {\r\n                members.user_perm = '超管'\r\n              } else if (res.data.data[i].user_perm === 1) {\r\n                members.user_perm = '管理员'\r\n              } else if (res.data.data[i].user_perm === 2) {\r\n                members.user_perm = '成员'\r\n              }\r\n              let flag = 0\r\n              for (let i = 0; i < this.memberList.length; i++) {\r\n                if (this.memberList[i].user_id === members.user_id) {\r\n                  flag = 1\r\n                  break\r\n                }\r\n              }\r\n              if (!flag) { this.memberList.push(members) }\r\n              // this.$message.success(res.data.message)\r\n            }\r\n          } else {\r\n             this.$message.error(res.data.message)\r\n          }\r\n           this.loading = false\r\n         })\r\n    },\r\n    createProject() {\r\n      this.$axios.post('/project/create', qs.stringify(this.form_createProject))\r\n        .then((res) => {\r\n          // console.log(5)\r\n          if (res.data.success) {\r\n            this.$message.success(res.data.message)\r\n          } else {\r\n            this.$message.error(res.data.message)\r\n          }\r\n          this.getProjectList()\r\n        })\r\n    },\r\n    Rename() {\r\n      this.$axios.post('/team/update', qs.stringify(this.form_rename))\r\n      .then(res => {\r\n          if (res.data.success === true) {\r\n            this.team_name = this.form_rename.teamName\r\n            this.$message.success(res.data.message)\r\n            this.dialogRenameVisible = false\r\n            this.form_rename.teamName = ''\r\n          } else {\r\n            this.$message.error(res.data.message)\r\n            this.dialogRenameVisible = false\r\n            this.form_rename.teamName = ''\r\n          }\r\n      })\r\n    },\r\n    setPerm(item) {\r\n      this.form_setPerm.member_id = item.id\r\n      this.$axios.post('/team/set_perm', qs.stringify(this.form_setPerm))\r\n        .then((res) => {\r\n          // console.log(5)\r\n          if (res.data.result === 7) {\r\n            this.$message.success(res.data.message)\r\n          } else {\r\n            this.$message.error(res.data.message)\r\n          }\r\n          this.getMemberList()\r\n        })\r\n    },\r\n    deleteProjectItem(item) {\r\n      this.$confirm('此操作将使您删除此项目' + ', 是否继续?', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n    }).then(() => {\r\n      this.deleteProject(item)\r\n      }).catch(() => {\r\n        this.$message({\r\n          type: 'info',\r\n          message: '已取消操作'\r\n        })\r\n      })\r\n    },\r\n    deleteProject(item) {\r\n      this.form_deleteProject.project_id = item.project_id\r\n      this.$axios.post('/project/delete', qs.stringify(this.form_deleteProject))\r\n        .then((res) => {\r\n          // console.log(5)\r\n          if (res.data.success) {\r\n            this.$message.success(res.data.message)\r\n          } else {\r\n            this.$message.error(res.data.message)\r\n          }\r\n          this.getProjectList()\r\n        })\r\n    },\r\n    updateProject() {\r\n      // this.form_updateProject.project_id = item.project_id\r\n      this.$axios.post('/project/update', qs.stringify(this.form_updateProject))\r\n        .then((res) => {\r\n          // console.log(5)\r\n          if (res.data.success) {\r\n            this.$message.success(res.data.message)\r\n          } else {\r\n            this.$message.error(res.data.message)\r\n          }\r\n          this.getProjectList()\r\n        })\r\n    },\r\n    deleteItem(item) {\r\n      if (item.id === this.form_deleteMember.user_id) {\r\n        this.$confirm('此操作将使您退出此团队' + ', 是否继续?', '提示', {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n      }).then(() => {\r\n        this.quitTeam()\r\n        }).catch(() => {\r\n          this.$message({\r\n            type: 'info',\r\n            message: '已取消操作'\r\n          })\r\n        })\r\n      } else {\r\n        this.$confirm('此操作将踢出用户成员' + item.username + ', 是否继续?', '提示', {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n      }).then(() => {\r\n        this.deleteMember(item)\r\n        }).catch(() => {\r\n          this.$message({\r\n            type: 'info',\r\n            message: '已取消操作'\r\n          })\r\n        })\r\n      }\r\n    },\r\n    handleSelectionChange(items) {\r\n      this.deleteMemberList = items\r\n    },\r\n    deleteMultiItem() {\r\n      this.$confirm('此操作将踢出您选中的所有成员, 是否继续?', '提示', {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n      }).then(() => {\r\n        for (let i = 0; i < this.deleteMemberList.length; i++) {\r\n          this.deleteMember(this.deleteMemberList[i])\r\n        }\r\n        this.getMemberList()\r\n        }).catch(() => {\r\n          this.$message({\r\n            type: 'info',\r\n            message: '已取消踢出'\r\n          })\r\n        })\r\n    },\r\n    deleteMemberItem(item) {\r\n      this.$confirm('此操作将踢出用户成员' + item.username + ', 是否继续?', '提示', {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n      }).then(() => {\r\n        this.deleteMember(item)\r\n        }).catch(() => {\r\n          this.$message({\r\n            type: 'info',\r\n            message: '已取消操作'\r\n          })\r\n        })\r\n    },\r\n    deleteMember(item) {\r\n      this.form_deleteMember.memberId = item.user_id\r\n      // console.log(item.id)\r\n      this.$axios.post('/team/deleteMember', qs.stringify(this.form_deleteMember))\r\n        .then((res) => {\r\n          // console.log(5)\r\n          if (res.data.success) {\r\n            this.$message.success(res.data.message)\r\n          } else {\r\n            this.$message.error(res.data.message)\r\n          }\r\n          this.getMemberList()\r\n        })\r\n    },\r\n    quitTeam() {\r\n      this.$confirm('此操作将使您退出该团队' + ', 是否继续?', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n    }).then(() => {\r\n      this.$axios.post('/team/quitTeam', qs.stringify(this.form_quitTeam))\r\n        .then((res) => {\r\n          if (res.data.success) {\r\n            this.$message.success(res.data.message)\r\n            this.onGroupSpace()\r\n          } else {\r\n            this.$message.error(res.data.message)\r\n          }\r\n        })\r\n      }).catch(() => {\r\n        this.$message({\r\n          type: 'info',\r\n          message: '已取消操作'\r\n        })\r\n      })\r\n    },\r\n    deleteTeam() {\r\n      this.$confirm('此操作将使您删除该团队' + ', 是否继续?', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n    }).then(() => {\r\n      this.$axios.post('/team/delete', qs.stringify(this.form_quitTeam))\r\n        .then((res) => {\r\n          if (res.data.success) {\r\n            this.$message.success(res.data.message)\r\n            this.onGroupSpace()\r\n          } else {\r\n            this.$message.error(res.data.message)\r\n          }\r\n        })\r\n      }).catch(() => {\r\n        this.$message({\r\n          type: 'info',\r\n          message: '已取消操作'\r\n        })\r\n      })\r\n    },\r\n    handleCurrentChange(val) {\r\n      this.toProject(val)\r\n    },\r\n    onGroupSpace() {\r\n      store.toGroupSpace && store.toGroupSpace()\r\n    },\r\n    clearList() {\r\n      this.memberList = []\r\n    },\r\n    toProject(item) {\r\n      localStorage.setItem('project_id', item.project_id)\r\n      localStorage.setItem('project_name', item.project_name)\r\n      localStorage.setItem('project_info', item.project_info)\r\n      this.$router.push('/list/table-group-project')\r\n    },\r\n    toProjectlist() {\r\n      this.$router.replace('/list/table-group')\r\n    },\r\n    invite() {\r\n      this.$axios.post('/team/inviteMember', qs.stringify(this.form_invite))\r\n         .then((res) => {\r\n           if (res.data.success) {\r\n             this.$message.success(res.data.message)\r\n           } else {\r\n             this.$message.error(res.data.message)\r\n           }\r\n           this.getMemberList()\r\n         })\r\n    },\r\n    onRichTextEditor() {\r\n      store.toRichTextEditor && store.toRichTextEditor()\r\n    },\r\n    onChooseTemplate() {\r\n      store.toChooseTemplate && store.toChooseTemplate()\r\n    },\r\n    onSingleSuccess({ res }) {\r\n      if (res.status !== 200) {\r\n        this.$errorMsg(res.msg)\r\n      } else {\r\n        this.userModel = res.obj\r\n      }\r\n    },\r\n    beforeUpload(file) {\r\n      const size = file.size\r\n      if (size / 1024 > 500) {\r\n        this.$errorMsg('上传文件最大不能超过500K')\r\n        return false\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.morebutton {\r\n  padding: 5px;\r\n  border: 0;\r\n}\r\n.button-style {\r\n  margin: 10px;\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  border-width: 3px;\r\n  color: black;\r\n  height: 45px;\r\n}\r\n.back-button{\r\n  margin-top: 20px;\r\n  font-size: 26px;\r\n  font-weight: bold;\r\n  color: black;\r\n  padding: 5px;\r\n  border: 0;\r\n}\r\n.table-custom {\r\n  width: 1000px;\r\n}\r\n.teamtitle {\r\n  font-size: 50px;\r\n  margin-left: 10px;\r\n  margin-top: 10px;\r\n  margin-bottom: 20px;\r\n  float: right;\r\n}\r\n.temptablebody{\r\n  height: 500px;\r\n  width: 75%;\r\n  float: left;\r\n}\r\n.messagecss{\r\n  width: 947px;\r\n  margin: 10px;\r\n}\r\n.rightside{\r\n  float: right;\r\n  width: 23%;\r\n  margin: 10px;\r\n  height: 500px;\r\n}\r\n.rightsidefont{\r\n  font-size: 25px;\r\n  margin: 10px;\r\n}\r\n</style>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/views/list/table-group-message.vue b/src/views/list/table-group-message.vue
--- a/src/views/list/table-group-message.vue	(revision 1cd5870b0ffe30c88df30f300774cdfaa67db15e)
+++ b/src/views/list/table-group-message.vue	(date 1659668488532)
@@ -488,7 +488,7 @@
               // this.$message.success(res.data.message)
             }
           } else {
-             //this.$message.error(res.data.message)
+             // this.$message.error(res.data.message)
           }
            this.loading = false
          })
